<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lomo | 朱幸民</title>
  
  <subtitle>on the way</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.zhuxingmin.com/"/>
  <updated>2020-02-27T09:09:32.527Z</updated>
  <id>https://www.zhuxingmin.com/</id>
  
  <author>
    <name>Lomo 朱幸民</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS交互微信之获取收货地址</title>
    <link href="https://www.zhuxingmin.com/2020/02/27/JS%E4%BA%A4%E4%BA%92%E5%BE%AE%E4%BF%A1%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%94%B6%E8%B4%A7%E5%9C%B0%E5%9D%80/"/>
    <id>https://www.zhuxingmin.com/2020/02/27/JS交互微信之获取收货地址/</id>
    <published>2020-02-27T08:29:13.000Z</published>
    <updated>2020-02-27T09:09:32.527Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇为<strong>JS交互微信系列篇</strong>的第二篇，上一篇《JS交互微信之基础配置》讲述了基础配置，本篇记录获取（共享）用户收货地址。</p><h2 id="一、-场景"><a href="#一、-场景" class="headerlink" title="一、 场景"></a>一、 场景</h2><p>在需要用户实际收货地址时，可以直接拉取用户微信中存在的收货地址，或者在微信中新增、编辑及删除收货地址，而后传给商户</p><a id="more"></a><h2 id="二、-介绍"><a href="#二、-介绍" class="headerlink" title="二、 介绍"></a>二、 介绍</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p>微信收货地址共享，是指用户在微信浏览器内打开网页，填写过地址后，后续可以免填写支持快速选择，也可增加和编辑。<br>此地址为用户属性，可在各商户的网页中共享使用。支持原生控件填写地址，地址数据会传递到商户。</p><h3 id="2-功能支持"><a href="#2-功能支持" class="headerlink" title="2. 功能支持"></a>2. 功能支持</h3><p>地址共享是基于微信JavaScript API 实现，<code>只能在微信内置浏览器中使用，其他浏览器调用无效</code>。同时，需要微信5.0 版本才能支持，建议通过user agent 来确定用户当前的版本号后再调用地址接口。<br>以iPhone 版本为例，可以通过useragent可获取如下微信版本示例信息：”<code>Mozilla/5.0(iphone;CPU iphone OS 5_1_1 like Mac OS X)AppleWebKit/534.46(KHTML,like Geocko) Mobile/9B206MicroMessenger/5.0</code>“其中5.0 为用户安装的微信版本号，商户可以判定版本号是否高于或者等于5.0。</p><h3 id="3-地址格式"><a href="#3-地址格式" class="headerlink" title="3. 地址格式"></a>3. 地址格式</h3><p>微信地址共享使用的数据字段包括：</p><ul><li>收货人姓名</li><li>地区，省市区三级</li><li>详细地址</li><li>邮编</li><li>联系电话</li><li>国际编码</li></ul><h2 id="三、-接口说明"><a href="#三、-接口说明" class="headerlink" title="三、 接口说明"></a>三、 接口说明</h2><p><strong>openAddress</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wx.openAddress(&#123;</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 用户成功拉出地址 </span></span><br><span class="line">    &#125;,</span><br><span class="line">    cancel: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 用户取消拉出地址</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong>返回值说明</strong></p><table><thead><tr><th style="text-align:center">返回值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center">errMsg</td><td>获取编辑收货地址成功返回“openAddress:ok”</td></tr><tr><td style="text-align:center">userName</td><td>收货人姓名</td></tr><tr><td style="text-align:center">postalCode</td><td>邮编</td></tr><tr><td style="text-align:center">provinceName</td><td>国标收货地址第一级地址（省）</td></tr><tr><td style="text-align:center">cityName</td><td>国标收货地址第二级地址（市）</td></tr><tr><td style="text-align:center">countryName</td><td>国标收货地址第三级地址（国家）</td></tr><tr><td style="text-align:center">detailInfo</td><td>详细收货地址信息</td></tr><tr><td style="text-align:center">nationalCode</td><td>收货地址国家码</td></tr><tr><td style="text-align:center">telNumber</td><td>收货人手机号码</td></tr></tbody></table><h2 id="四、-示例代码"><a href="#四、-示例代码" class="headerlink" title="四、 示例代码"></a>四、 示例代码</h2><h3 id="1-引入script"><a href="#1-引入script" class="headerlink" title="1. 引入script"></a>1. 引入script</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 主文件 或 入口文件 引入</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://res.wx.qq.com/open/js/jweixin-1.1.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-wx-config配置"><a href="#2-wx-config配置" class="headerlink" title="2. wx.config配置"></a>2. wx.config配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 微信配置</span></span><br><span class="line"><span class="comment">// appId、timestamp、nonceStr、signature从公众号和后台获取</span></span><br><span class="line">wx.config(&#123;</span><br><span class="line">    debug: <span class="literal">false</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class="line">    appId: <span class="string">''</span>, <span class="comment">// 必填，公众号的唯一标识</span></span><br><span class="line">    timestamp: <span class="string">''</span>, <span class="comment">// 必填，生成签名的时间戳</span></span><br><span class="line">    nonceStr: <span class="string">''</span>, <span class="comment">// 必填，生成签名的随机串</span></span><br><span class="line">    signature: <span class="string">''</span>,<span class="comment">// 必填，签名</span></span><br><span class="line">    jsApiList: [</span><br><span class="line">        <span class="string">'checkJsApi'</span>,</span><br><span class="line">        <span class="string">'openAddress'</span></span><br><span class="line">    ] <span class="comment">// 必填，需要使用的JS接口列表 这里填写需要用到的微信api openlocation为使用微信内置地图查看位置接口</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="3-获取地址"><a href="#3-获取地址" class="headerlink" title="3. 获取地址"></a>3. 获取地址</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">wx.ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 检测接口是否可用，开发环境中测试用，生产环境没问题可不写</span></span><br><span class="line">    wx.checkJsApi(&#123;</span><br><span class="line">        jsApiList: [</span><br><span class="line">            <span class="string">'openAddress'</span>,</span><br><span class="line">        ],</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            alert(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 请求接口</span></span><br><span class="line">    wx.openAddress(&#123;</span><br><span class="line">        <span class="comment">// 请求成功要做的事</span></span><br><span class="line">        success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 这里我把获取到的用户信息存储到了vuex中的state中保存，以防后续路由跳转带来的组件销毁带来的数据没法保存</span></span><br><span class="line">            <span class="comment">// 根据自己需求拿自己需要的参数即可，参数名可对照上面的返回值说明表</span></span><br><span class="line">            _this.$store.state.address.userName = res.userName;</span><br><span class="line">            _this.$store.state.address.telNumber = res.telNumber;</span><br><span class="line">            _this.$store.state.address.nationalCode = res.nationalCode;</span><br><span class="line">            _this.$store.state.address.provinceName = res.provinceName;</span><br><span class="line">            _this.$store.state.address.cityName = res.cityName;</span><br><span class="line">            _this.$store.state.address.countryName = res.countryName;</span><br><span class="line">            _this.$store.state.address.detailInfo = res.detailInfo;</span><br><span class="line">        &#125;,</span><br><span class="line">        cancel: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 用户取消要做的事儿</span></span><br><span class="line">            <span class="comment">// 这里我把请求时打开的一个loading动画给关闭了</span></span><br><span class="line">            _this.$layer.close();</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="五、-常见问题"><a href="#五、-常见问题" class="headerlink" title="五、 常见问题"></a>五、 常见问题</h2><p>在开发中，我遇到的问题如下：</p><ol><li>必须发布到线上测试，没找到好的解决办法；</li><li>公众号（服务号）中要设置IP白名单，不然通不过验证！</li><li>安卓可以调起而iOS无法调起：引入<code>script</code>链接时，应引入<code>https</code>而不是<code>http</code>，可能iOS对安全策略这块儿比较严格，在此处踩了个坑。</li><li>在PC端无法调起！</li></ol><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇为&lt;strong&gt;JS交互微信系列篇&lt;/strong&gt;的第二篇，上一篇《JS交互微信之基础配置》讲述了基础配置，本篇记录获取（共享）用户收货地址。&lt;/p&gt;
&lt;h2 id=&quot;一、-场景&quot;&gt;&lt;a href=&quot;#一、-场景&quot; class=&quot;headerlink&quot; title=&quot;一、 场景&quot;&gt;&lt;/a&gt;一、 场景&lt;/h2&gt;&lt;p&gt;在需要用户实际收货地址时，可以直接拉取用户微信中存在的收货地址，或者在微信中新增、编辑及删除收货地址，而后传给商户&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="js" scheme="https://www.zhuxingmin.com/tags/js/"/>
    
      <category term="微信" scheme="https://www.zhuxingmin.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="jssdk" scheme="https://www.zhuxingmin.com/tags/jssdk/"/>
    
  </entry>
  
  <entry>
    <title>JS交互微信之基础配置</title>
    <link href="https://www.zhuxingmin.com/2020/02/25/JS%E4%BA%A4%E4%BA%92%E5%BE%AE%E4%BF%A1%E4%B9%8B%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.zhuxingmin.com/2020/02/25/JS交互微信之基础配置/</id>
    <published>2020-02-25T10:12:58.000Z</published>
    <updated>2020-02-26T06:58:24.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近公司需求，需要在APP中分享出去的web页面中加入商品购买功能，目前需要使用微信支付。由于微信支付基础为0，因此不得不扒文档抄作业，加上度娘的支持，得以完成了一些功能，因此开一小模块记录下关于此项目中前端用到的东西。不过不得不说，复杂的东西都在后端执行，需要前端完成的真的是少之又少，都是一些基础配置以及调取微信文档中写的接口而已，不要想得过于复杂。</p><a id="more"></a><h3 id="篇章介绍"><a href="#篇章介绍" class="headerlink" title="篇章介绍"></a>篇章介绍</h3><p>目前可能会更新以下几块内容，每个模块仅与基础配置篇相关，其他的相互独立（如，获取用户地址模块不参与自定义分享模块内容，但都基于基础配置篇），每篇内容尽量简洁明了。</p><ul><li>基础配置（本篇）</li><li>获取用户收货地址</li><li>自定义分享</li><li>微信支付（微信浏览器，JSAPI支付）</li><li>微信支付（非微信浏览器,H5支付）</li></ul><h3 id="应用场景介绍"><a href="#应用场景介绍" class="headerlink" title="应用场景介绍"></a>应用场景介绍</h3><ol><li>在微信内打开网页时候，如果需要获取用户在微信填写的收获地址，可通过api直接调取。   ———— 微信地址共享</li><li>商户已有H5商城网站，用户通过消息、分享、链接或扫描二维码等方式在微信内打开网页时，可以调用微信支付完成下单购买的流程。    ———— JSAPI支付</li><li>用户在微信内某个页面想要分享给朋友或朋友圈时，需要对分享内容、标题及图片重新配置时使用。  ———— 自定义分享</li><li>H5支付是指商户在微信客户端外的移动端网页展示商品或服务，用户在前述页面确认使用微信支付时，商户发起本服务呼起微信客户端进行支付。  ———— H5支付</li></ol><hr><h2 id="一、-基础配置-JSSDK"><a href="#一、-基础配置-JSSDK" class="headerlink" title="一、 基础配置(JSSDK)"></a>一、 基础配置(JSSDK)</h2><p><strong><em>本块儿内容基本上是微信开放文档中配置，可忽略</em></strong></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>微信JS-SDK是微信公众平台面向网页开发者提供的基于微信内的网页开发工具包。<br>通过使用微信JS-SDK，网页开发者可借助微信高效地使用拍照、选图、语音、位置等手机系统的能力，同时可以直接使用微信分享、扫一扫、卡券、支付等微信特有的能力，为微信用户提供更优质的网页体验。</p><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><h4 id="1-绑定域名"><a href="#1-绑定域名" class="headerlink" title="1. 绑定域名"></a>1. 绑定域名</h4><p>先登录微信公众平台进入“公众号设置”的“功能设置”里填写“JS接口安全域名”。<br><em>备注：登录后可在“开发者中心”查看对应的接口权限</em></p><h4 id="2-引入JS"><a href="#2-引入JS" class="headerlink" title="2. 引入JS"></a>2. 引入JS</h4><p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://res.wx.qq.com/open/js/jweixin-1.6.0.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p><em>备注：支持使用 AMD/CMD 标准模块加载方法加载</em></p><h4 id="3-通过config接口注入权限验证配置"><a href="#3-通过config接口注入权限验证配置" class="headerlink" title="3. 通过config接口注入权限验证配置"></a>3. 通过config接口注入权限验证配置</h4><p>所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（<strong><em>同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复</em></strong>）。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wx.config(&#123;</span><br><span class="line">  debug: <span class="literal">false</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class="line">  appId: <span class="string">''</span>, <span class="comment">// 必填，公众号的唯一标识</span></span><br><span class="line">  timestamp: , <span class="comment">// 必填，生成签名的时间戳</span></span><br><span class="line">  nonceStr: <span class="string">''</span>, <span class="comment">// 必填，生成签名的随机串</span></span><br><span class="line">  signature: <span class="string">''</span>,<span class="comment">// 必填，签名</span></span><br><span class="line">  jsApiList: [] <span class="comment">// 必填，需要使用的JS接口列表</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h4 id="4-接口验证"><a href="#4-接口验证" class="headerlink" title="4. 接口验证"></a>4. 接口验证</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 成功</span></span><br><span class="line">wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 失败</span></span><br><span class="line">wx.error(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="二、-补充"><a href="#二、-补充" class="headerlink" title="二、 补充"></a>二、 补充</h2><p>在上面几个步骤中，有几个注意点：</p><ul><li>步骤3中的参数，后端提供；</li><li>步骤4中，通过ready验证成功的接口，有以下通用参数：<ol><li>success：接口调用成功时执行的回调函数。</li><li>fail：接口调用失败时执行的回调函数。</li><li>complete：接口调用完成时执行的回调函数，无论成功或失败都会执行。</li><li>cancel：用户点击取消时的回调函数，仅部分有用户取消操作的api才会用到。</li><li>trigger: 监听Menu中的按钮点击时触发的方法，该方法仅支持Menu中的相关接口。</li><li><em>备注：不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回。</em></li></ol></li><li><p>在使用每个JS接口前，可以使用<code>checkJsApi</code>的方法判断是否支持该接口：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wx.checkJsApi(&#123;</span><br><span class="line">  jsApiList: [<span class="string">'onMenuShareTimeline'</span>], <span class="comment">// 需要检测的JS接口列表，此处为分享到朋友圈接口示例</span></span><br><span class="line">  success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 以键值对的形式返回，可用的api值true，不可用为false</span></span><br><span class="line">  <span class="comment">// 如：&#123;"checkResult":&#123;"onMenuShareTimeline":true&#125;,"errMsg":"checkJsApi:ok"&#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>所有接口列表</p></li></ul><table><thead><tr><th style="text-align:center">接口名</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center">updateAppMessageShareData</td><td style="text-align:center">分享给朋友</td></tr><tr><td style="text-align:center">updateTimelineShareData</td><td style="text-align:center">分享到朋友圈</td></tr><tr><td style="text-align:center">onMenuShareTimeline（即将废弃）</td><td style="text-align:center">分享到朋友圈</td></tr><tr><td style="text-align:center">onMenuShareAppMessage（即将废弃）</td><td style="text-align:center">分享给朋友</td></tr><tr><td style="text-align:center">onMenuShareQQ（即将废弃）</td><td style="text-align:center">分享到QQ</td></tr><tr><td style="text-align:center">onMenuShareWeibo</td><td style="text-align:center">分享到微博</td></tr><tr><td style="text-align:center">onMenuShareQZone</td><td style="text-align:center">分享到空间</td></tr><tr><td style="text-align:center">startRecord</td><td style="text-align:center">开始录音</td></tr><tr><td style="text-align:center">stopRecord</td><td style="text-align:center">停止录音</td></tr><tr><td style="text-align:center">onVoiceRecordEnd</td><td style="text-align:center">录音超时</td></tr><tr><td style="text-align:center">playVoice</td><td style="text-align:center">播放</td></tr><tr><td style="text-align:center">pauseVoice</td><td style="text-align:center">暂停</td></tr><tr><td style="text-align:center">stopVoice</td><td style="text-align:center">停止</td></tr><tr><td style="text-align:center">onVoicePlayEnd</td><td style="text-align:center">播放结束时执行</td></tr><tr><td style="text-align:center">uploadVoice</td><td style="text-align:center">上传录音</td></tr><tr><td style="text-align:center">downloadVoice</td><td style="text-align:center">下载录音</td></tr><tr><td style="text-align:center">chooseImage</td><td style="text-align:center">选择本地照片</td></tr><tr><td style="text-align:center">previewImage</td><td style="text-align:center">预览</td></tr><tr><td style="text-align:center">uploadImage</td><td style="text-align:center">上传</td></tr><tr><td style="text-align:center">downloadImage</td><td style="text-align:center">下载</td></tr><tr><td style="text-align:center">translateVoice</td><td style="text-align:center">翻译</td></tr><tr><td style="text-align:center">getNetworkType</td><td style="text-align:center">网络状况</td></tr><tr><td style="text-align:center">openLocation</td><td style="text-align:center">打开内置地图</td></tr><tr><td style="text-align:center">getLocation</td><td style="text-align:center">获取用户位置</td></tr><tr><td style="text-align:center">hideOptionMenu</td><td style="text-align:center">隐藏菜单</td></tr><tr><td style="text-align:center">showOptionMenu</td><td style="text-align:center">显示菜单</td></tr><tr><td style="text-align:center">hideMenuItems</td><td style="text-align:center">隐藏菜单按钮</td></tr><tr><td style="text-align:center">hideAllNonBaseMenuItem</td><td style="text-align:center">屏蔽所有按钮</td></tr><tr><td style="text-align:center">showAllNonBaseMenuItem</td><td style="text-align:center">显示所有按钮</td></tr><tr><td style="text-align:center">closeWindow</td><td style="text-align:center">关闭页面</td></tr><tr><td style="text-align:center">scanQRCode</td><td style="text-align:center">扫描二维码</td></tr><tr><td style="text-align:center">chooseWXPay</td><td style="text-align:center">微信支付</td></tr><tr><td style="text-align:center">openProductSpecificView</td><td style="text-align:center">微信卡券</td></tr><tr><td style="text-align:center">addCard</td><td style="text-align:center">添加卡券到卡包</td></tr><tr><td style="text-align:center">chooseCard</td><td style="text-align:center">拉取卡券</td></tr><tr><td style="text-align:center">openCard</td><td style="text-align:center">添加卡券</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近公司需求，需要在APP中分享出去的web页面中加入商品购买功能，目前需要使用微信支付。由于微信支付基础为0，因此不得不扒文档抄作业，加上度娘的支持，得以完成了一些功能，因此开一小模块记录下关于此项目中前端用到的东西。不过不得不说，复杂的东西都在后端执行，需要前端完成的真的是少之又少，都是一些基础配置以及调取微信文档中写的接口而已，不要想得过于复杂。&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="js" scheme="https://www.zhuxingmin.com/tags/js/"/>
    
      <category term="微信" scheme="https://www.zhuxingmin.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="jssdk" scheme="https://www.zhuxingmin.com/tags/jssdk/"/>
    
  </entry>
  
  <entry>
    <title>vue使用canvas签名之清空和保存</title>
    <link href="https://www.zhuxingmin.com/2020/02/03/vue%E4%BD%BF%E7%94%A8canvas%E7%AD%BE%E5%90%8D%E4%B9%8B%E6%B8%85%E7%A9%BA%E5%92%8C%E4%BF%9D%E5%AD%98/"/>
    <id>https://www.zhuxingmin.com/2020/02/03/vue使用canvas签名之清空和保存/</id>
    <published>2020-02-03T06:11:33.000Z</published>
    <updated>2020-02-14T08:33:23.581Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/posts/canvas画板清空保存.gif" alt="canvas画板清空保存" title="canvas画板清空保存"></p><a id="more"></a><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>&emsp;&emsp;在一些项目业务中，经常会使用到画板，让用户自己去写/画一些东西做标示，比如说在线签电子合约、签名等，在上两篇博客中，已经解决了PC端和移动端的Canvas签名，那么在签名完成之后，我们如何将画布上东西保存，或者清空呢？ <strong><em>【本篇包含PC和移动端的签名，以及清空和保存】</em></strong></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>&emsp;&emsp;在前两篇中，分辨实现了<code>PC端canvas签名</code>以及<code>移动端canvas签名</code>，要是形成一个简单且完整的功能点，我们起码还缺少清空和保存两个环节。接下来分析一下。</p><h3 id="1-清空"><a href="#1-清空" class="headerlink" title="1. 清空"></a>1. 清空</h3><p>&emsp;&emsp;就是将此前所画的所有笔画清除掉，方法则是清空存放点集合的数组重新设置画布宽高即可。另外一个方法，也可以使用<code>clearRect()</code>，这个方法是清空画布中一个矩形区域内的内容。由于我们并为保存所有点集合，所以采用此方法清空。</p><h4 id="1-1-关于clearRect"><a href="#1-1-关于clearRect" class="headerlink" title="1.1 关于clearRect"></a>1.1 关于clearRect</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// clearRect() 方法清空给定矩形内的指定像素。</span></span><br><span class="line">context.clearRect(x,y,width,height);</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">描述</th><th style="text-align:center">举例(全部清空)</th></tr></thead><tbody><tr><td style="text-align:center">x</td><td style="text-align:center">要清除的矩形左上角的 x 坐标</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">y</td><td style="text-align:center">要清除的矩形左上角的 y 坐标</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">width</td><td style="text-align:center">要清除的矩形的宽度，以像素计</td><td style="text-align:center">context.width</td></tr><tr><td style="text-align:center">height</td><td style="text-align:center">要清除的矩形的高度，以像素计</td><td style="text-align:center">context.height</td></tr></tbody></table><h4 id="1-2-代码示例"><a href="#1-2-代码示例" class="headerlink" title="1.2 代码示例"></a>1.2 代码示例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> @<span class="attr">click</span>=<span class="string">"cleanCanvas"</span>&gt;</span></span><br><span class="line">    清空</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mounted () &#123;</span><br><span class="line">    <span class="keyword">let</span> board = <span class="keyword">this</span>.$refs.board;   <span class="comment">// 获取DOM</span></span><br><span class="line">    <span class="keyword">this</span>.width = board.width = <span class="keyword">this</span>.$refs.boardBox.offsetWidth;  <span class="comment">// 设置画布宽</span></span><br><span class="line">    <span class="keyword">this</span>.height = board.height = <span class="keyword">this</span>.$refs.boardBox.offsetHeight;    <span class="comment">// 设置画布高</span></span><br><span class="line">    ...     <span class="comment">// something codes</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空画布</span></span><br><span class="line">cleanCanvas () &#123;</span><br><span class="line">    <span class="comment">// clearRect() 方法清空给定矩形内的指定像素。</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.clearRect(</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="keyword">this</span>.width,</span><br><span class="line">        <span class="keyword">this</span>.height</span><br><span class="line">    )</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="2-保存"><a href="#2-保存" class="headerlink" title="2. 保存"></a>2. 保存</h3><p>保存，需求简单明了，就是将canvas输出为一张图片。处理也简单粗暴，直接将此区域输出为一张base64的图片即可。方法是使用原生方法<code>toDataURL()</code></p><h4 id="2-1-关于toDataURL"><a href="#2-1-关于toDataURL" class="headerlink" title="2.1 关于toDataURL"></a>2.1 关于toDataURL</h4><p>HTMLCanvasElement.toDataURL() 方法返回一个包含图片展示的 data URI 。可以使用 type 参数其类型，默认为 PNG 格式。图片的分辨率为96dpi。</p><ul><li>如果画布的高度或宽度是0，那么会返回字符串“data:,”。</li><li>如果传入的类型非“image/png”，但是返回的值以“data:image/png”开头，那么该传入的类型是不支持的。</li><li>Chrome支持“image/webp”类型。</li></ul><p><strong>方法</strong><br>canvas.toDataURL(type, encoderOptions);<br><strong>参数</strong></p><ul><li>type 可选<br>图片格式，默认为 image/png</li><li>encoderOptions 可选<br>图片质量。取值范围为 0 到 1 。如果指定图片格式为 image/jpeg 或 image/webp。如果超出取值范围，将会使用默认值 0.92。其他参数会被忽略。</li></ul><p><strong>返回值</strong><br>包含 data URI 的DOMString。</p><h4 id="2-2-代码示例"><a href="#2-2-代码示例" class="headerlink" title="2.2 代码示例"></a>2.2 代码示例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"success"</span> @<span class="attr">click</span>=<span class="string">"saveCanvas"</span>&gt;</span></span><br><span class="line">    保存</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"base64"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        base64: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存签名</span></span><br><span class="line">saveCanvas () &#123;</span><br><span class="line">    <span class="keyword">this</span>.base64 = <span class="keyword">this</span>.$refs.board.toDataURL(); <span class="comment">// 转为base64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>关于canvas签名的基本到这里就结束了，项目如果有遇到更复杂的再继续更新。目前更新的有</p><ul><li>PC端签名方法</li><li>移动端签名方法</li><li>PC和移动端签名方法以及清空和保存</li></ul><p>想了解本期源码的可以关注下公众号<code>流眸</code>回复<code>canvas</code>或者<code>签名</code>获取哦～<br><img src="/images/qrcode.jpg" alt="微信公众号" title="流眸"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/posts/canvas画板清空保存.gif&quot; alt=&quot;canvas画板清空保存&quot; title=&quot;canvas画板清空保存&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="js" scheme="https://www.zhuxingmin.com/tags/js/"/>
    
      <category term="canvas" scheme="https://www.zhuxingmin.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>vue使用canvas签名之移动端</title>
    <link href="https://www.zhuxingmin.com/2020/01/14/vue%E4%BD%BF%E7%94%A8canvas%E7%AD%BE%E5%90%8D%E4%B9%8B%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    <id>https://www.zhuxingmin.com/2020/01/14/vue使用canvas签名之移动端/</id>
    <published>2020-01-14T07:04:37.000Z</published>
    <updated>2020-02-14T08:33:23.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/posts/canvas画板m.gif" alt="canvas移动端签名" title="canvas移动端签名"></p><a id="more"></a><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>&emsp;&emsp;在一些项目业务中，经常会使用到画板，让用户自己去写/画一些东西做标示，比如说在线签电子合约、签名等，如果不用插件，那么如何使用h5的canvas画布来实现这一需求呢？ <strong><em>【本篇只讨论移动端，PC端请看上篇】</em></strong></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>&emsp;&emsp;很明显，我们需要一个canvas，关于canvas的一些基本操作可以在w3school或者别的一些平台上熟悉一下，其实本例也是基础操作。本案例在vue中完成。（脱离vue也一样。）</p><ul><li>首先，需要一个canvas画布</li><li>其次，考虑逻辑</li><li>把逻辑实现</li></ul><h3 id="1-canvas画布"><a href="#1-canvas画布" class="headerlink" title="1. canvas画布"></a>1. canvas画布</h3><p>随意布局的一个画布，此处值得注意的是<strong>如果canvas的宽高确定，则在html&gt;canvas中直接写宽高，如果不确定，根据别的元素变化，那么可以在js中初始化画布时写</strong>。</p><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boardBox"</span> <span class="attr">ref</span>=<span class="string">"boardBox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">"board"</span></span></span><br><span class="line"><span class="tag">            </span></span><br><span class="line">    &lt;/canvas&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boardBox</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90vw</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">25vh</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">    canvas&#123;</span><br><span class="line">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#b3b3b3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="画布初始化"><a href="#画布初始化" class="headerlink" title="画布初始化"></a>画布初始化</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> board = <span class="keyword">this</span>.$refs.board;   <span class="comment">// 获取DOM</span></span><br><span class="line">board.width = <span class="keyword">this</span>.$refs.boardBox.offsetWidth;  <span class="comment">// 设置画布宽</span></span><br><span class="line">board.height = <span class="keyword">this</span>.$refs.boardBox.offsetHeight;    <span class="comment">// 设置画布高</span></span><br><span class="line"><span class="keyword">this</span>.ctx = board.getContext(<span class="string">'2d'</span>);   <span class="comment">// 二维绘图</span></span><br><span class="line"><span class="keyword">this</span>.ctx.strokeStyle = <span class="string">'#000'</span>;   <span class="comment">// 颜色</span></span><br><span class="line"><span class="keyword">this</span>.ctx.lineWidth = <span class="number">3</span>;  <span class="comment">// 线条宽度</span></span><br></pre></td></tr></table></figure><h3 id="2-逻辑分析"><a href="#2-逻辑分析" class="headerlink" title="2. 逻辑分析"></a>2. 逻辑分析</h3><p>由于本篇只讨论移动端端，因此无非是在画布上监听三个触摸事件：<code>touchstart</code>、<code>touchmove</code>、<code>touchend</code>。<br>那么，在这三个事件中，分别需要做什么呢？</p><h4 id="touchstart"><a href="#touchstart" class="headerlink" title="touchstart"></a>touchstart</h4><p>开始滑动按下，需要做：</p><ul><li>获取触摸点做画布上的位置</li><li>存为一个点坐标（起始点）</li><li>以起始点建立一个路径</li><li>开启画布操作</li></ul><h4 id="touchmove"><a href="#touchmove" class="headerlink" title="touchmove"></a>touchmove</h4><p>触摸滑动时，又要做那些准备呢？</p><ul><li>判断是否开启画布操作，如果没开启就禁止绘制，因此先判断是否当前状态可绘制</li><li>获取触摸点做画布上的位置</li><li>上一个点到这一个点作连线</li><li>绘制出来</li><li>当前点存储，下一次用</li></ul><h4 id="touchend"><a href="#touchend" class="headerlink" title="touchend"></a>touchend</h4><p>滑动结束，事件结束：</p><ul><li>closePath（） // 停止绘制</li><li>关闭画布操作的开关</li></ul><p><strong>好了，其实就是这三个事件，理清楚之后去代码实现就简单得多了。附上代码一份。</strong></p><h3 id="3-代码"><a href="#3-代码" class="headerlink" title="3. 代码"></a>3. 代码</h3><p><strong>CSS略，如初始化即可，不是重点。</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boardBox"</span> <span class="attr">ref</span>=<span class="string">"boardBox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">"board"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">touchstart</span>=<span class="string">"mStart"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">touchmove</span>=<span class="string">"mMove"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">touchend</span>=<span class="string">"mEnd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        ctx: <span class="literal">null</span>,</span><br><span class="line">        point: &#123;</span><br><span class="line">            x: <span class="number">0</span>,</span><br><span class="line">            y: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        moving: <span class="literal">false</span>   <span class="comment">// 是否正在绘制中且移动</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br><span class="line">mounted() &#123;</span><br><span class="line">    <span class="keyword">let</span> board = <span class="keyword">this</span>.$refs.board;   <span class="comment">// 获取DOM</span></span><br><span class="line">    board.width = <span class="keyword">this</span>.$refs.boardBox.offsetWidth;  <span class="comment">// 设置画布宽</span></span><br><span class="line">    board.height = <span class="keyword">this</span>.$refs.boardBox.offsetHeight;    <span class="comment">// 设置画布高</span></span><br><span class="line">    <span class="keyword">this</span>.ctx = board.getContext(<span class="string">'2d'</span>);   <span class="comment">// 二维绘图</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.strokeStyle = <span class="string">'#000'</span>;   <span class="comment">// 颜色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.lineWidth = <span class="number">3</span>;  <span class="comment">// 线条宽度</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">// 触摸(开始)</span></span><br><span class="line">    mStart (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        <span class="keyword">let</span> x = e.touches[<span class="number">0</span>].clientX - e.target.offsetLeft,</span><br><span class="line">            y = e.touches[<span class="number">0</span>].clientY - e.target.offsetTop;   <span class="comment">// 获取触摸点在画板（canvas）的坐标</span></span><br><span class="line">        <span class="keyword">this</span>.point.x = x;</span><br><span class="line">        <span class="keyword">this</span>.point.y = y;</span><br><span class="line">        <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="keyword">this</span>.moving = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 滑动中...</span></span><br><span class="line">    mMove (e) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.moving) &#123;</span><br><span class="line">            <span class="keyword">let</span> x = e.touches[<span class="number">0</span>].clientX - e.target.offsetLeft,</span><br><span class="line">                y = e.touches[<span class="number">0</span>].clientY - e.target.offsetTop;   <span class="comment">// 获取触摸点在画板（canvas）的坐标</span></span><br><span class="line">            <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.point.x, <span class="keyword">this</span>.point.y);    <span class="comment">// 把路径移动到画布中的指定点，不创建线条(起始点)</span></span><br><span class="line">            <span class="keyword">this</span>.ctx.lineTo(x, y);  <span class="comment">// 添加一个新点，然后创建从该点到画布中最后指定点的线条，不创建线条</span></span><br><span class="line">            <span class="keyword">this</span>.ctx.stroke();  <span class="comment">// 绘制</span></span><br><span class="line">            <span class="keyword">this</span>.point.x = x, <span class="keyword">this</span>.point.y = y;   <span class="comment">// 重置点坐标为上一个坐标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 滑动结束</span></span><br><span class="line">    mEnd () &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.moving) &#123;</span><br><span class="line">            <span class="keyword">this</span>.ctx.closePath();   <span class="comment">// 停止绘制</span></span><br><span class="line">            <span class="keyword">this</span>.moving = <span class="literal">false</span>;    <span class="comment">// 关闭绘制开关</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ul><li>上一篇，在PC端完成绘制，本篇如法炮制，在移动端也顺利完成，相比pc端只是稍微的修改了一下获取坐标点的算法而已。那么PC端和移动端如何并存呢？</li><li>出错了，怎么重新绘制呢？</li><li>绘制完成后，怎么保存呢？</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/posts/canvas画板m.gif&quot; alt=&quot;canvas移动端签名&quot; title=&quot;canvas移动端签名&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="js" scheme="https://www.zhuxingmin.com/tags/js/"/>
    
      <category term="canvas" scheme="https://www.zhuxingmin.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>vue使用canvas签名之PC端</title>
    <link href="https://www.zhuxingmin.com/2020/01/10/vue%E4%BD%BF%E7%94%A8canvas%E7%AD%BE%E5%90%8D%E4%B9%8BPC%E7%AB%AF/"/>
    <id>https://www.zhuxingmin.com/2020/01/10/vue使用canvas签名之PC端/</id>
    <published>2020-01-10T03:39:08.000Z</published>
    <updated>2020-02-14T08:33:23.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/posts/canvas画板pc.gif" alt="canvas签名效果" title="签名效果"></p><a id="more"></a><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>&emsp;&emsp;在一些项目业务中，经常会使用到画板，让用户自己去写/画一些东西做标示，比如说在线签电子合约、签名等，如果不用插件，那么如何使用h5的canvas画布来实现这一需求呢？ <strong><em>【本篇只讨论PC端，移动端期待下篇】</em></strong></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>&emsp;&emsp;很明显，我们需要一个canvas，关于canvas的一些基本操作可以在w3school或者别的一些平台上熟悉一下，其实本例也是基础操作。本案例在vue中完成。（脱离vue也一样。）</p><ul><li>首先，需要一个canvas画布</li><li>其次，考虑逻辑</li><li>把逻辑实现</li></ul><h3 id="1-canvas画布"><a href="#1-canvas画布" class="headerlink" title="1. canvas画布"></a>1. canvas画布</h3><p>随意布局的一个画布，此处值得注意的是<strong>如果canvas的宽高确定，则在html&gt;canvas中直接写宽高，如果不确定，根据别的元素变化，那么可以在js中初始化画布时写</strong>。</p><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boardBox"</span> <span class="attr">ref</span>=<span class="string">"boardBox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">"board"</span></span></span><br><span class="line"><span class="tag">            </span></span><br><span class="line">    &lt;/canvas&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boardBox</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80vw</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35vh</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">    canvas&#123;</span><br><span class="line">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#298cff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="画布初始化"><a href="#画布初始化" class="headerlink" title="画布初始化"></a>画布初始化</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> board = <span class="keyword">this</span>.$refs.board;   <span class="comment">// 获取DOM</span></span><br><span class="line">board.width = <span class="keyword">this</span>.$refs.boardBox.offsetWidth;  <span class="comment">// 设置画布宽</span></span><br><span class="line">board.height = <span class="keyword">this</span>.$refs.boardBox.offsetHeight;    <span class="comment">// 设置画布高</span></span><br><span class="line"><span class="keyword">this</span>.ctx = board.getContext(<span class="string">'2d'</span>);   <span class="comment">// 二维绘图</span></span><br><span class="line"><span class="keyword">this</span>.ctx.strokeStyle = <span class="string">'#ff0000'</span>;   <span class="comment">// 颜色</span></span><br><span class="line"><span class="keyword">this</span>.ctx.lineWidth = <span class="number">5</span>;  <span class="comment">// 线条宽度</span></span><br></pre></td></tr></table></figure><h3 id="2-逻辑分析"><a href="#2-逻辑分析" class="headerlink" title="2. 逻辑分析"></a>2. 逻辑分析</h3><p>由于本篇只讨论PC端，因此无非是在画布上监听三个鼠标事件：<code>mousedown</code>、<code>mousemove</code>、<code>mouseup</code>。<br>那么，在这三个事件中，分别需要做什么呢？</p><h4 id="mousedown"><a href="#mousedown" class="headerlink" title="mousedown"></a>mousedown</h4><p>鼠标按下，需要做：</p><ul><li>获取鼠标做画布上的位置</li><li>存为一个点坐标（起始点）</li><li>以起始点建立一个路径</li><li>开启画布操作</li></ul><h4 id="mousemove"><a href="#mousemove" class="headerlink" title="mousemove"></a>mousemove</h4><p>鼠标移动时，又要做那些准备呢？</p><ul><li>判断是否开启画布操作，如果没开启我们当然不能鼠标在画布上移动就给绘制吧，因此先判断是否当前状态可绘制</li><li>获取鼠标做画布上的位置</li><li>上一个点到这一个点作连线</li><li>绘制出来</li><li>当前点存储，下一次用</li></ul><p>可能此处有些迷，大概意思就是，鼠标不停的运动，在某一时刻鼠标的位置A（x,y），在下一时刻A则会变成上一个位置，我们的思路无非是不断的绘制出鼠标上一个时刻到当前时刻的路径而已。一会儿上代码可能就好理解一点。</p><h4 id="mouseup"><a href="#mouseup" class="headerlink" title="mouseup"></a>mouseup</h4><p>鼠标抬起，事件结束：</p><ul><li>closePath（） // 停止绘制</li><li>关闭画布操作的开关</li></ul><p><strong>好了，其实就是这三个事件，理清楚之后去代码实现就简单得多了。附上代码一份。</strong></p><h3 id="3-代码"><a href="#3-代码" class="headerlink" title="3. 代码"></a>3. 代码</h3><p><strong>CSS略，如初始化即可，不是重点。</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boardBox"</span> <span class="attr">ref</span>=<span class="string">"boardBox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">"board"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">mousedown</span>=<span class="string">"pcStart"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">mousemove</span>=<span class="string">"pcMove"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">mouseup</span>=<span class="string">"pcEnd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        ctx: <span class="literal">null</span>,</span><br><span class="line">        point: &#123;</span><br><span class="line">            x: <span class="number">0</span>,</span><br><span class="line">            y: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        moving: <span class="literal">false</span>   <span class="comment">// 是否正在绘制中且移动</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br><span class="line">mounted() &#123;</span><br><span class="line">    <span class="keyword">let</span> board = <span class="keyword">this</span>.$refs.board;   <span class="comment">// 获取DOM</span></span><br><span class="line">    board.width = <span class="keyword">this</span>.$refs.boardBox.offsetWidth;  <span class="comment">// 设置画布宽</span></span><br><span class="line">    board.height = <span class="keyword">this</span>.$refs.boardBox.offsetHeight;    <span class="comment">// 设置画布高</span></span><br><span class="line">    <span class="keyword">this</span>.ctx = board.getContext(<span class="string">'2d'</span>);   <span class="comment">// 二维绘图</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.strokeStyle = <span class="string">'#ff0000'</span>;   <span class="comment">// 颜色</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.lineWidth = <span class="number">5</span>;  <span class="comment">// 线条宽度</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">// 鼠标按下(开始)</span></span><br><span class="line">    pcStart (e) &#123;</span><br><span class="line">        <span class="keyword">let</span> x = e.offsetX, y = e.offsetY;   <span class="comment">// 获取鼠标在画板（canvas）的坐标</span></span><br><span class="line">        <span class="keyword">this</span>.point.x = x;</span><br><span class="line">        <span class="keyword">this</span>.point.y = y;</span><br><span class="line">        <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="keyword">this</span>.moving = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 鼠标移动（移动中...）</span></span><br><span class="line">    pcMove (e) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.moving) &#123;</span><br><span class="line">            <span class="keyword">let</span> x = e.offsetX, y = e.offsetY;   <span class="comment">// 获取鼠标在画板（canvas）的坐标</span></span><br><span class="line">            <span class="keyword">this</span>.ctx.moveTo(<span class="keyword">this</span>.point.x, <span class="keyword">this</span>.point.y);    <span class="comment">// 把路径移动到画布中的指定点，不创建线条(起始点)</span></span><br><span class="line">            <span class="keyword">this</span>.ctx.lineTo(x, y);  <span class="comment">// 添加一个新点，然后创建从该点到画布中最后指定点的线条，不创建线条</span></span><br><span class="line">            <span class="keyword">this</span>.ctx.stroke();  <span class="comment">// 绘制</span></span><br><span class="line">            <span class="keyword">this</span>.point.x = x, <span class="keyword">this</span>.point.y = y;   <span class="comment">// 重置点坐标为上一个坐标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 鼠标松开（结束）</span></span><br><span class="line">    pcEnd () &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.moving) &#123;</span><br><span class="line">            <span class="keyword">this</span>.ctx.closePath();   <span class="comment">// 停止绘制</span></span><br><span class="line">            <span class="keyword">this</span>.moving = <span class="literal">false</span>;    <span class="comment">// 关闭绘制开关</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>&emsp;&emsp;PC端出来了，而现在其实还是移动端偏多，并且这只是一个问题，是否还有延伸呢？</p><ul><li>移动端是否可以如法炮制呢？</li><li>出错了，怎么重新绘制呢？</li><li>绘制完成后，怎么保存呢？</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/posts/canvas画板pc.gif&quot; alt=&quot;canvas签名效果&quot; title=&quot;签名效果&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="js" scheme="https://www.zhuxingmin.com/tags/js/"/>
    
      <category term="canvas" scheme="https://www.zhuxingmin.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>解决vue打包报错UglifyJs</title>
    <link href="https://www.zhuxingmin.com/2019/12/06/%E8%A7%A3%E5%86%B3vue%E6%89%93%E5%8C%85%E6%8A%A5%E9%94%99UglifyJs/"/>
    <id>https://www.zhuxingmin.com/2019/12/06/解决vue打包报错UglifyJs/</id>
    <published>2019-12-06T04:13:29.000Z</published>
    <updated>2020-02-14T08:33:23.583Z</updated>
    
    <content type="html"><![CDATA[<h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR in js/xxxxxx.js from UglifyJs</span><br><span class="line">Unexpected token: name «Dom7», expected: punc «;» [js/chunk-3068</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="产生"><a href="#产生" class="headerlink" title="产生"></a>产生</h3><p>在vue配置中，由于各插件版本兼容性差异可能会引发此问题的产生。<code>UglifyJs</code>是一款可以解析、混淆、压缩JS的工具，此处的UglifyJs是配置在脚手架/webpack中，运行在node环境中的小插件。<br>关于UglifyJs：</p><blockquote><ol><li>uglify-js@3具有简化的API和CLI，该API和CLI与不能向后兼容uglify-js@2。</li><li>UglifyJS 2.x版本的文档可以在这里找到。</li><li>glify-js 仅支持JavaScript（ECMAScript 5）。</li><li>要缩小ECMAScript 2015或更高版本，请使用Babel之类的工具进行翻译。</li></ol></blockquote><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="低版本："><a href="#低版本：" class="headerlink" title="低版本："></a>低版本：</h4><ul><li>原因： UglifyJs不支持ES6语法，因此报错。</li><li>解决方案： 项目根目录下创建文件<code>.babelrc</code>，配置如下<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"pressets"</span>: [<span class="string">"es2015"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="高版本："><a href="#高版本：" class="headerlink" title="高版本："></a>高版本：</h4><ul><li>原因1：UglifyJs版本过低</li><li><p>解决方案： 升级UglifyJs版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install uglify-js -g</span><br></pre></td></tr></table></figure></li><li><p>原因2: babel 转译问题</p></li><li>解决方案： 找到babel的配置项<code>transpileDependencies</code>，如下操作：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 旧</span></span><br><span class="line">transpileDependencies: [</span><br><span class="line"><span class="comment">/* string or regex */</span></span><br><span class="line">],</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改为如下⬇️ </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 新  </span></span><br><span class="line">transpileDependencies: [</span><br><span class="line">    <span class="string">'vue-particles'</span>,</span><br><span class="line">    <span class="string">'animejs'</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure></li></ul><h3 id="重新打包"><a href="#重新打包" class="headerlink" title="重新打包"></a>重新打包</h3><p><code>npm run build</code>，完毕。</p><h3 id="附"><a href="#附" class="headerlink" title="附"></a>附</h3><p><a href="mailto:vue-cli@3.x" target="_blank" rel="noopener">vue-cli@3.x</a> <code>vue.config.js</code>配置混淆压缩代js及去除console(缺少的插件先安装上)<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 去除console</span></span><br><span class="line"><span class="keyword">const</span> UglifyJsPlugin = <span class="built_in">require</span>(<span class="string">'uglifyjs-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩css、js</span></span><br><span class="line"><span class="keyword">const</span> CompressionWebpackPlugin = <span class="built_in">require</span>(<span class="string">'compression-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 要压缩的文件</span></span><br><span class="line"><span class="keyword">const</span> productionGzipExtensions = [<span class="string">'js'</span>, <span class="string">'css'</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">// something else codes</span></span><br><span class="line"></span><br><span class="line">    configureWebpack: <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 如果不是开发环境</span></span><br><span class="line">        <span class="keyword">if</span> (env !== <span class="string">'development'</span>) &#123;</span><br><span class="line">            <span class="comment">// 代码压缩</span></span><br><span class="line">            config.plugins.push(<span class="keyword">new</span> CompressionWebpackPlugin(&#123;</span><br><span class="line">                algorithm: <span class="string">'gzip'</span>,</span><br><span class="line">                test: <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">`\\.(<span class="subst">$&#123;productionGzipExtensions.join(<span class="string">'|'</span>)&#125;</span>)$`</span>),</span><br><span class="line">                threshold: <span class="number">10240</span>,</span><br><span class="line">                minRatio: <span class="number">0.8</span>,</span><br><span class="line">            &#125;));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 打包后清除断点和控制台打印</span></span><br><span class="line">            config.plugins.push(</span><br><span class="line">                <span class="keyword">new</span> UglifyJsPlugin(&#123;</span><br><span class="line">                    uglifyOptions: &#123;</span><br><span class="line">                        compress: &#123;</span><br><span class="line">                            drop_debugger: <span class="literal">true</span>, <span class="comment">// 注释debugger</span></span><br><span class="line">                            drop_console: <span class="literal">true</span>, <span class="comment">// 注释console</span></span><br><span class="line">                            pure_funcs:[<span class="string">'console.log'</span>] <span class="comment">// 移除console</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    sourceMap: <span class="literal">false</span>,   <span class="comment">// 去除打包后生成的.map文件</span></span><br><span class="line">                    parallel: <span class="literal">true</span>,</span><br><span class="line">                &#125;),</span><br><span class="line"></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>希望能够解决您的问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;报错&quot;&gt;&lt;a href=&quot;#报错&quot; class=&quot;headerlink&quot; title=&quot;报错&quot;&gt;&lt;/a&gt;报错&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ERROR in js/xxxxxx.js from UglifyJs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Unexpected token: name «Dom7», expected: punc «;» [js/chunk-3068&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="uglify报错" scheme="https://www.zhuxingmin.com/tags/uglify%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>vue中高德搭配echarts做迁徙流线图</title>
    <link href="https://www.zhuxingmin.com/2019/12/03/vue%E4%B8%AD%E9%AB%98%E5%BE%B7%E6%90%AD%E9%85%8Decharts%E5%81%9A%E8%BF%81%E5%BE%99%E6%B5%81%E7%BA%BF%E5%9B%BE/"/>
    <id>https://www.zhuxingmin.com/2019/12/03/vue中高德搭配echarts做迁徙流线图/</id>
    <published>2019-12-03T07:36:06.000Z</published>
    <updated>2020-02-14T08:33:23.579Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>此系列共分为以下几篇</p><blockquote><ul><li>《vue中高德地图的使用》</li><li>《vue中基于高德的多行政区域覆盖》</li><li><strong>《vue中高德搭配echarts做数据迁徙流线图》</strong> <em>（本篇）</em></li></ul></blockquote><h3 id="本篇效果"><a href="#本篇效果" class="headerlink" title="本篇效果"></a>本篇效果</h3><p><img src="/images/posts/流线迁徙.gif" alt="效果展示" title="流线迁徙"><br><a id="more"></a></p><hr><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><h4 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1. 思路分析"></a>1. 思路分析</h4><p>第一篇的基础讲解，加上上一片的行政区域行政区域展示（描边及背景），其实可以完成很多炫酷效果了。本篇讲述系列篇的最后一篇：vue中高德搭配echarts做数据迁徙流线图。由于流线图使用的曲线是贝塞尔曲线，而在高德中无法直接简单粗暴的使用，想要完成此效果的话可能要进行一些算法操作才能完成该效果。在节约时间成本的条件下，找到了在echarts中完成该操作。简单的说，就是用echarts的功能，搭配高德的经纬度当背景板，来完成此操作。</p><blockquote><p>步骤分析</p><ol><li>echarts安装 引入</li><li>高德背景板设置（经纬度、中心点等）</li><li>挂载数据</li></ol></blockquote><h4 id="2-代码分析"><a href="#2-代码分析" class="headerlink" title="2. 代码分析"></a>2. 代码分析</h4><h5 id="echarts安装-引入"><a href="#echarts安装-引入" class="headerlink" title="echarts安装 引入"></a>echarts安装 引入</h5><ul><li>安装：<code>npm install echarts --save-dev</code></li><li>引入： <code>main.js</code> =&gt; <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局挂载echarts</span></span><br><span class="line"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">'echarts'</span></span><br><span class="line"></span><br><span class="line">Vue.prototype.$echarts = echarts;</span><br></pre></td></tr></table></figure></li></ul><h5 id="高德背景板设置"><a href="#高德背景板设置" class="headerlink" title="高德背景板设置"></a>高德背景板设置</h5><p>在此中，可以自定义的调整一些关于地图背景板的配置，如样式、3D效果、旋转、动画等，在demo中有所注释，自己根据需要配置即可。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载 amap 组件</span></span><br><span class="line">amap: &#123;</span><br><span class="line">    <span class="comment">// 高德地图中心经纬度</span></span><br><span class="line">    center: [<span class="number">105.397428</span>, <span class="number">38.90923</span>], <span class="comment">//中心点</span></span><br><span class="line">    <span class="comment">// 高德地图缩放</span></span><br><span class="line">    zoom: <span class="number">4</span>,</span><br><span class="line">    <span class="comment">// 启用resize</span></span><br><span class="line">    resizeEnable: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 自定义地图样式主题</span></span><br><span class="line">    mapStyle: <span class="string">"amap://xxxxxx"</span>, <span class="comment">// 地图主题 自己申请即可 我的是极夜蓝主题</span></span><br><span class="line">    <span class="comment">// viewMode:'3D',//开启3D视图,默认为关闭</span></span><br><span class="line">    <span class="comment">// expandZoomRange:true,</span></span><br><span class="line">    <span class="comment">// zooms:[3,20],</span></span><br><span class="line">    <span class="comment">// pitch: 40</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><h5 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h5><p>此处写了两组数据，一组为<code>flyLine</code>代表流线数组，另一组为<code>goals</code>代表目标点。其中流线数据中坐标点有两个，是起始和终点的经纬度坐标。如下所示：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        flyLine: [</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">123.499706</span>,<span class="number">41.857793</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">86.113232</span>,<span class="number">43.684254</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">87.343701</span>,<span class="number">35.720308</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">101.406201</span>,<span class="number">24.177443</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">111.249951</span>,<span class="number">24.976714</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">107.206982</span>,<span class="number">33.843608</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">115.468701</span>,<span class="number">43.557002</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">107.031201</span>,<span class="number">37.134586</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">99.648388</span>,<span class="number">38.522914</span>]]&#125;,</span><br><span class="line">            &#123;<span class="attr">coords</span>: [[<span class="number">116.496437</span>,<span class="number">39.913523</span>], [<span class="number">124.081982</span>,<span class="number">49.361353</span>]]&#125;,</span><br><span class="line">        ],</span><br><span class="line">        goals: [</span><br><span class="line">            [<span class="number">123.499706</span>,<span class="number">41.857793</span>],</span><br><span class="line">            [<span class="number">86.113232</span>,<span class="number">43.684254</span>],</span><br><span class="line">            [<span class="number">87.343701</span>,<span class="number">35.720308</span>],</span><br><span class="line">            [<span class="number">101.406201</span>,<span class="number">24.177443</span>],</span><br><span class="line">            [<span class="number">111.249951</span>,<span class="number">24.976714</span>],</span><br><span class="line">            [<span class="number">107.206982</span>,<span class="number">33.843608</span>],</span><br><span class="line">            [<span class="number">115.468701</span>,<span class="number">43.557002</span>],</span><br><span class="line">            [<span class="number">107.031201</span>,<span class="number">37.134586</span>],</span><br><span class="line">            [<span class="number">107.031201</span>,<span class="number">37.134586</span>],</span><br><span class="line">            [<span class="number">99.648388</span>,<span class="number">38.522914</span>],</span><br><span class="line">            [<span class="number">124.081982</span>,<span class="number">49.361353</span>]</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><h5 id="数据渲染"><a href="#数据渲染" class="headerlink" title="数据渲染"></a>数据渲染</h5><p>最后一步，其实是echarts的常规操作，可以配置流线、提示、流线背景、特效、效果、等等等等，依然是配置自己需要的即可，毕竟是搭配来的地图，特效多了会影响性能～如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"map"</span> <span class="attr">ref</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">mapInit () &#123;</span><br><span class="line">    <span class="keyword">let</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> option = &#123;</span><br><span class="line">        <span class="comment">// 加载 amap 组件</span></span><br><span class="line">        amap: &#123;</span><br><span class="line">            <span class="comment">// 高德地图中心经纬度</span></span><br><span class="line">            center: [<span class="number">105.397428</span>, <span class="number">38.90923</span>], <span class="comment">//中心点</span></span><br><span class="line">            <span class="comment">// 高德地图缩放</span></span><br><span class="line">            zoom: <span class="number">4</span>,</span><br><span class="line">            <span class="comment">// 启用resize</span></span><br><span class="line">            resizeEnable: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 自定义地图样式主题</span></span><br><span class="line">            mapStyle: <span class="string">"amap://styles/bfb1bb3feb0db7082367abca96b8d214"</span>, <span class="comment">//地图主题</span></span><br><span class="line">            <span class="comment">// viewMode:'3D',//开启3D视图,默认为关闭</span></span><br><span class="line">            <span class="comment">// expandZoomRange:true,</span></span><br><span class="line">            <span class="comment">// zooms:[3,20],</span></span><br><span class="line">            <span class="comment">// pitch: 40</span></span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;</span><br><span class="line">            trigger: <span class="string">'item'</span>,</span><br><span class="line">            show: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        animation: <span class="literal">false</span>,</span><br><span class="line">        series: [</span><br><span class="line">            <span class="comment">// 流线</span></span><br><span class="line">            &#123;</span><br><span class="line">                coordinateSystem: <span class="string">"amap"</span>, <span class="comment">// 该系列使用的坐标系是高德地图的坐标系</span></span><br><span class="line">                type: <span class="string">"lines"</span>, <span class="comment">// 该类型用于地图上路线的绘制</span></span><br><span class="line">                zlevel: <span class="number">1</span>, <span class="comment">// 相当于z-index</span></span><br><span class="line">                effect: &#123; <span class="comment">// 线特效的配置</span></span><br><span class="line">                    show: <span class="literal">true</span>,  <span class="comment">// 是否显示特效</span></span><br><span class="line">                    period: <span class="number">5</span>, <span class="comment">// 特效动画的时间</span></span><br><span class="line">                    trailLength: <span class="number">0.05</span>, <span class="comment">// 特效尾迹的长度 0-1</span></span><br><span class="line">                    color: <span class="string">"#3437ff"</span>, <span class="comment">// 特效的颜色</span></span><br><span class="line">                    symbolSize: <span class="number">5</span> <span class="comment">// 特效的大小</span></span><br><span class="line">                &#125;,</span><br><span class="line">                lineStyle: &#123; <span class="comment">// 线的颜色</span></span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: <span class="string">"rgba(47,68,200,0.1)"</span>,</span><br><span class="line">                        width: <span class="number">2</span>,</span><br><span class="line">                        curveness: <span class="number">0.2</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                data: _this.flyLine,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 目标点</span></span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">'目标点'</span>,</span><br><span class="line">                type: <span class="string">"scatter"</span>,</span><br><span class="line">                <span class="comment">// 使用高德地图坐标系</span></span><br><span class="line">                coordinateSystem: <span class="string">"amap"</span>,</span><br><span class="line">                <span class="comment">// 数据格式跟在 geo 坐标系上一样，每一项都是 [经度，纬度，数值大小，其它维度...]</span></span><br><span class="line">                data:  _this.goals,</span><br><span class="line">                symbolSize: <span class="number">3</span>,</span><br><span class="line">                encode: &#123;</span><br><span class="line">                    value: <span class="number">2</span></span><br><span class="line">                &#125;,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        formatter: <span class="string">'&#123;b&#125;'</span>,</span><br><span class="line">                        position: <span class="string">'right'</span>,</span><br><span class="line">                        show: <span class="literal">false</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    emphasis: &#123;</span><br><span class="line">                        show: <span class="literal">true</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                itemStyle: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: <span class="string">'rgba(98,122,200,0.78)'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">let</span> chart = <span class="keyword">this</span>.$echarts.init(_this.$refs.map);</span><br><span class="line">    chart.setOption(option);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>至此，目的完成：<br><img src="/images/posts/流线迁徙.png" alt="效果展示" title="流线迁徙"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;此系列共分为以下几篇&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;《vue中高德地图的使用》&lt;/li&gt;
&lt;li&gt;《vue中基于高德的多行政区域覆盖》&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;《vue中高德搭配echarts做数据迁徙流线图》&lt;/strong&gt; &lt;em&gt;（本篇）&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;本篇效果&quot;&gt;&lt;a href=&quot;#本篇效果&quot; class=&quot;headerlink&quot; title=&quot;本篇效果&quot;&gt;&lt;/a&gt;本篇效果&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/posts/流线迁徙.gif&quot; alt=&quot;效果展示&quot; title=&quot;流线迁徙&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="js" scheme="https://www.zhuxingmin.com/tags/js/"/>
    
      <category term="高德" scheme="https://www.zhuxingmin.com/tags/%E9%AB%98%E5%BE%B7/"/>
    
      <category term="echarts" scheme="https://www.zhuxingmin.com/tags/echarts/"/>
    
      <category term="流线" scheme="https://www.zhuxingmin.com/tags/%E6%B5%81%E7%BA%BF/"/>
    
      <category term="地图" scheme="https://www.zhuxingmin.com/tags/%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="迁徙" scheme="https://www.zhuxingmin.com/tags/%E8%BF%81%E5%BE%99/"/>
    
  </entry>
  
  <entry>
    <title>vue中基于高德的多行政区域覆盖</title>
    <link href="https://www.zhuxingmin.com/2019/11/12/vue%E4%B8%AD%E5%9F%BA%E4%BA%8E%E9%AB%98%E5%BE%B7%E7%9A%84%E5%A4%9A%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%9F%9F%E8%A6%86%E7%9B%96/"/>
    <id>https://www.zhuxingmin.com/2019/11/12/vue中基于高德的多行政区域覆盖/</id>
    <published>2019-11-12T06:45:03.000Z</published>
    <updated>2019-11-14T01:14:52.527Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>此系列共分为以下几篇</p><blockquote><ul><li>《vue中高德地图的使用》</li><li><strong>《vue中基于高德的多行政区域覆盖》</strong> <em>（本篇）</em></li><li>《vue中高德搭配echarts做数据迁徙流线图》</li></ul></blockquote><h3 id="本篇效果"><a href="#本篇效果" class="headerlink" title="本篇效果"></a>本篇效果</h3><p><img src="/images/posts/行政区域展示.png" alt="效果展示" title="行政区域展示"><br><a id="more"></a></p><hr><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><h4 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1. 思路分析"></a>1. 思路分析</h4><p>基于上一篇的基础讲解，再来看本篇目的，行政区域展示（秒变及背景），其实就是基于在经纬度坐标系上将某个/些行政区域规划出来。如果仔细看官方文档的前端er，则更是发现在文档中提供灵了一个行政区域上色的工具方法。因此基础思路如下：</p><ol><li>加载基础坐标系；</li><li>给定具体行政区域上色；</li><li>多行政区域循环；</li></ol><h4 id="2-代码分析"><a href="#2-代码分析" class="headerlink" title="2. 代码分析"></a>2. 代码分析</h4><p>==详细代码在文章底部==</p><h5 id="初始化地图"><a href="#初始化地图" class="headerlink" title="初始化地图"></a>初始化地图</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 略 见文章底部详细代码</span></span><br></pre></td></tr></table></figure><h5 id="行政区域蒙层加载"><a href="#行政区域蒙层加载" class="headerlink" title="行政区域蒙层加载"></a>行政区域蒙层加载</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">areaBG (cityName) &#123;</span><br><span class="line">    <span class="comment">// 加载行政区划插件</span></span><br><span class="line">    AMap.service(<span class="string">'AMap.DistrictSearch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> opts = &#123;</span><br><span class="line">        subdistrict: <span class="number">1</span>,   <span class="comment">// 返回下一级行政区</span></span><br><span class="line">        extensions: <span class="string">'all'</span>,  <span class="comment">// 返回行政区边界坐标组等具体信息</span></span><br><span class="line">        level: <span class="string">'city'</span>  <span class="comment">// 查询行政级别为市</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 实例化DistrictSearch</span></span><br><span class="line">        <span class="keyword">let</span> district = <span class="keyword">new</span> AMap.DistrictSearch(opts);</span><br><span class="line">        district.setLevel(<span class="string">'district'</span>);</span><br><span class="line">        <span class="comment">// 行政区查询</span></span><br><span class="line">        district.search(<span class="string">`<span class="subst">$&#123;cityName&#125;</span>`</span>, <span class="function"><span class="keyword">function</span>(<span class="params">status, result</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取边界信息</span></span><br><span class="line">        <span class="keyword">let</span> bounds = result.districtList[<span class="number">0</span>].boundaries;</span><br><span class="line">        <span class="comment">// 存放行政区划</span></span><br><span class="line">        <span class="keyword">let</span> polygons = [];</span><br><span class="line">        <span class="keyword">if</span> (bounds) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = bounds.length; i &lt; l; i++) &#123;</span><br><span class="line">            <span class="comment">//生成行政区划polygon</span></span><br><span class="line">            <span class="keyword">let</span> polygon = <span class="keyword">new</span> AMap.Polygon(&#123;</span><br><span class="line">                map: <span class="keyword">new</span> AMap.Map(<span class="string">"map"</span>, &#123;</span><br><span class="line">                    center: [<span class="number">105.397428</span>, <span class="number">35.90923</span>],</span><br><span class="line">                    zoom: <span class="number">5</span></span><br><span class="line">                &#125;);,   <span class="comment">// 坐标系及主题</span></span><br><span class="line">                strokeWeight: <span class="number">1</span>,   </span><br><span class="line">                path: bounds[i],</span><br><span class="line">                fillOpacity: <span class="number">0.2</span>,</span><br><span class="line">                fillColor: <span class="string">'rgba(71,228,194,0.44)'</span>,</span><br><span class="line">                strokeColor: <span class="string">'rgba(83,204,79,0.65)'</span></span><br><span class="line">            &#125;);</span><br><span class="line">            polygons.push(polygon);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.areaBG(<span class="string">'辽宁省'</span>);</span><br></pre></td></tr></table></figure><p>得到如下地图示例：<em>(此处添加了个人的’mapStyle’)</em></p><p><img src="/images/posts/行政区域-辽宁省.png" alt="行政区域-辽宁省" title="行政区域-辽宁省"></p><p>那么，如果是多个行政区域，如何循环遍历呢？</p><h5 id="多区域加载"><a href="#多区域加载" class="headerlink" title="多区域加载"></a>多区域加载</h5><p>机智的各位已经发现了,我们前面其实已经把城市名字提出来了，那么直接遍历即可。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 行政区域加载</span></span><br><span class="line"><span class="keyword">let</span> cities = [<span class="string">'北京市'</span>,<span class="string">'郑州市'</span>,<span class="string">'西安市'</span>,<span class="string">'呼和浩特'</span>,<span class="string">'辽宁省'</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; _cities.length; i ++)&#123;</span><br><span class="line">    <span class="keyword">this</span>.areaBG(map, cities[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>至此，目的完成：<br><img src="/images/posts/行政区域展示.png" alt="效果展示" title="行政区域展示"></p><h3 id="附：代码"><a href="#附：代码" class="headerlink" title="附：代码"></a>附：代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"map"</span> <span class="attr">id</span>=<span class="string">"map"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">// 加载行政区域</span></span><br><span class="line">    areaBG (map, cityName) &#123;</span><br><span class="line">        AMap.service(<span class="string">'AMap.DistrictSearch'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> opts = &#123;</span><br><span class="line">                subdistrict: <span class="number">1</span>,   <span class="comment">// 返回下一级行政区</span></span><br><span class="line">                extensions: <span class="string">'all'</span>,  <span class="comment">// 返回行政区边界坐标组等具体信息</span></span><br><span class="line">                level: <span class="string">'city'</span>  <span class="comment">// 查询行政级别为市</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 实例化DistrictSearch</span></span><br><span class="line">            <span class="keyword">let</span> district = <span class="keyword">new</span> AMap.DistrictSearch(opts);</span><br><span class="line">            district.setLevel(<span class="string">'district'</span>);</span><br><span class="line">            <span class="comment">// 行政区查询</span></span><br><span class="line">            district.search(<span class="string">`<span class="subst">$&#123;cityName&#125;</span>`</span>, <span class="function"><span class="keyword">function</span> (<span class="params">status, result</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 获取边界信息</span></span><br><span class="line">                <span class="keyword">let</span> bounds = result.districtList[<span class="number">0</span>].boundaries;</span><br><span class="line">                <span class="keyword">let</span> polygons = [];</span><br><span class="line">                <span class="keyword">if</span> (bounds) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = bounds.length; i &lt; l; i++) &#123;</span><br><span class="line">                        <span class="comment">// 生成行政区划polygon</span></span><br><span class="line">                        <span class="keyword">let</span> polygon = <span class="keyword">new</span> AMap.Polygon(&#123;</span><br><span class="line">                            map: map,</span><br><span class="line">                            strokeWeight: <span class="number">1</span>,</span><br><span class="line">                            path: bounds[i],</span><br><span class="line">                            fillOpacity: <span class="number">0.2</span>,</span><br><span class="line">                            fillColor: <span class="string">'rgba(71,228,194,0.44)'</span>,</span><br><span class="line">                            strokeColor: <span class="string">'rgba(83,204,79,0.65)'</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                        polygons.push(polygon);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 初始化地图，并加载行政区域</span></span><br><span class="line">    mapInit () &#123;</span><br><span class="line">        <span class="keyword">let</span> map = <span class="keyword">new</span> AMap.Map(<span class="string">"partnerMap"</span>, &#123;</span><br><span class="line">            center: [<span class="number">105.397428</span>, <span class="number">35.90923</span>],</span><br><span class="line">            mapStyle: <span class="string">"amap://styles/bfb1bb3feb0db7082367abca96b8d214"</span>, <span class="comment">// 设置地图的显示样式</span></span><br><span class="line">            zoom: <span class="number">5</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 行政区域加载</span></span><br><span class="line">        <span class="keyword">let</span> cities = [<span class="string">'北京市'</span>,<span class="string">'郑州市'</span>,<span class="string">'西安市'</span>,<span class="string">'呼和浩特'</span>,<span class="string">'辽宁省'</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; _cities.length; i ++)&#123;</span><br><span class="line">            <span class="keyword">this</span>.areaBG(map, cities[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.mapInit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;此系列共分为以下几篇&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;《vue中高德地图的使用》&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;《vue中基于高德的多行政区域覆盖》&lt;/strong&gt; &lt;em&gt;（本篇）&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;《vue中高德搭配echarts做数据迁徙流线图》&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;本篇效果&quot;&gt;&lt;a href=&quot;#本篇效果&quot; class=&quot;headerlink&quot; title=&quot;本篇效果&quot;&gt;&lt;/a&gt;本篇效果&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/posts/行政区域展示.png&quot; alt=&quot;效果展示&quot; title=&quot;行政区域展示&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="js" scheme="https://www.zhuxingmin.com/tags/js/"/>
    
      <category term="高德" scheme="https://www.zhuxingmin.com/tags/%E9%AB%98%E5%BE%B7/"/>
    
  </entry>
  
  <entry>
    <title>vue中使用高德地图开发</title>
    <link href="https://www.zhuxingmin.com/2019/11/02/vue%E4%B8%AD%E4%BD%BF%E7%94%A8%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E5%BC%80%E5%8F%91/"/>
    <id>https://www.zhuxingmin.com/2019/11/02/vue中使用高德地图开发/</id>
    <published>2019-11-02T02:43:31.000Z</published>
    <updated>2019-11-14T01:14:52.526Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>&emsp;&emsp;最近两年比较热门的一个名次叫“数据可视化”，在前端方向大致体现为<code>地图数据展示</code>以及<code>图表类数据展示</code>。那么，如何在vue中使用基于高德地图来做地图数据可视化以及加上e Charts的图表类型数据可视化呢？接下来会分三篇文章来进行概述，最终实现下图内容：</p><p><img src="/images/posts/vue+amap+echarts示例.gif" alt="最终效果" title="最终效果"></p><a id="more"></a><p>共分为以下几篇</p><blockquote><ul><li><strong>《vue中高德地图的使用》</strong> <em>（本篇）</em></li><li>《vue中基于高德的多行政区域覆盖》</li><li>《vue中高德搭配echarts做数据迁徙流线图》</li></ul></blockquote><p>接下来，开始第一篇，实现效果如下：</p><p><img src="/images/posts/地图01.png" alt="实现效果" title="实现效果"></p><h2 id="vue中高德地图的使用"><a href="#vue中高德地图的使用" class="headerlink" title="vue中高德地图的使用"></a>vue中高德地图的使用</h2><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h3><ol><li>vue搭建</li><li>高德开发key值申请（<a href="链接：https://lbs.amap.com/api/yuntu/guide/create-project/permission/">链接：高德开放平台</a>），key值请放入以下需要对号入座的地方</li><li>地图样式挑选，需要申请到key值后，在高德开放平台自动移地图模板处挑选配置。此处用<code>极夜蓝</code>模板来示例，也可选择其他模板。然后发布=&gt;复制与分享=&gt;辅助出来样式ID。如：<code>bb7f5165253f57515d7ba226b2******</code>，然后放入以下需要对号入座的地方</li><li>注：第二步和第三步申请的两个值需要对应使用</li></ol><h3 id="2-地图引入项目"><a href="#2-地图引入项目" class="headerlink" title="2. 地图引入项目"></a>2. 地图引入项目</h3><h4 id="入口文件index-html引入标签"><a href="#入口文件index-html引入标签" class="headerlink" title="入口文件index.html引入标签:"></a>入口文件index.html引入标签:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://webapi.amap.com/maps?v=1.4.15&amp;key=这里放入key值"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//webapi.amap.com/ui/1.0/main.js?v=1.0.11"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="vue-config-js中配置"><a href="#vue-config-js中配置" class="headerlink" title="vue.config.js中配置:"></a>vue.config.js中配置:</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    configureWebpack(config) &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        config.externals = &#123;</span><br><span class="line">            <span class="string">'AMap'</span>: <span class="string">'AMap'</span> <span class="comment">// 高德地图配置</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用该功能的组件中引入："><a href="#使用该功能的组件中引入：" class="headerlink" title="使用该功能的组件中引入："></a>使用该功能的组件中引入：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AMap <span class="keyword">from</span> <span class="string">"AMap"</span></span><br></pre></td></tr></table></figure><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h3><p>地图初始化即可：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"map"</span> <span class="attr">id</span>=<span class="string">"map"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入地图组件</span></span><br><span class="line"><span class="keyword">import</span> AMap <span class="keyword">from</span> <span class="string">"AMap"</span></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">MapInit () &#123;</span><br><span class="line">    <span class="keyword">let</span> _this = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">let</span> map = <span class="keyword">new</span> AMap.Map(<span class="string">"map"</span>, &#123;</span><br><span class="line">        center: [<span class="number">105.397428</span>, <span class="number">35.90923</span>],</span><br><span class="line">        mapStyle: <span class="string">"amap://styles/这里放入样式ID"</span>, <span class="comment">//设置地图的显示样式</span></span><br><span class="line">        resizeEnable: <span class="literal">true</span>,</span><br><span class="line">        zoom: <span class="number">5</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到初始化的地图：<br><img src="/images/posts/地图02.png" alt="初始化地图" title="初始化地图"></p><h4 id="4-展示点"><a href="#4-展示点" class="headerlink" title="4. 展示点"></a>4. 展示点</h4><p>其实展示点在地图中叫做<code>地理编码</code>，意思是将某个点的经纬度在地图中展现出来。与之类似的，高德也提供逆地理编码服务，此处不在我们示例范围内，有兴趣的可以自行在官方API中查看。<br>接下来展示数据点：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// data中,location是地理编码，color 1绿2黄3红</span></span><br><span class="line">dataList: [</span><br><span class="line">    &#123; <span class="attr">location</span>: <span class="string">"113.772,22.785"</span>, <span class="attr">color</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">location</span>: <span class="string">"114.772,22.785"</span>, <span class="attr">color</span>: <span class="number">3</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">location</span>: <span class="string">"116.410778,39.897614"</span>, <span class="attr">color</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">location</span>: <span class="string">"123.499706,41.857793"</span>, <span class="attr">color</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">location</span>: <span class="string">"111.722363,40.868346"</span>, <span class="attr">color</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">location</span>: <span class="string">"103.987988,30.662124"</span>, <span class="attr">color</span>: <span class="number">3</span> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="keyword">let</span> _this = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> AMap.Map(<span class="string">"adMap"</span>, &#123;</span><br><span class="line">    center: [<span class="number">105.397428</span>, <span class="number">35.90923</span>],</span><br><span class="line">    mapStyle: <span class="string">"amap://styles/bb7f5165253f57515d7ba226b25ad7ec"</span>, <span class="comment">//设置地图的显示样式</span></span><br><span class="line">    resizeEnable: <span class="literal">true</span>,</span><br><span class="line">    zoom: <span class="number">5</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 根据color状态展示不同的图片</span></span><br><span class="line"><span class="keyword">const</span> style = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 1</span></span><br><span class="line">        url: <span class="string">"此处放一张图的url"</span>,</span><br><span class="line">        anchor: <span class="keyword">new</span> AMap.Pixel(<span class="number">5</span>, <span class="number">5</span>),   <span class="comment">// 位移</span></span><br><span class="line">        size: <span class="keyword">new</span> AMap.Size(<span class="number">10</span>, <span class="number">10</span>) <span class="comment">// 图片大小</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 2</span></span><br><span class="line">        url: <span class="string">"此处放另外一张图的url"</span>,</span><br><span class="line">        anchor: <span class="keyword">new</span> AMap.Pixel(<span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">        size: <span class="keyword">new</span> AMap.Size(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 3</span></span><br><span class="line">        url: <span class="string">"此处再放一张图的url"</span>,</span><br><span class="line">        anchor: <span class="keyword">new</span> AMap.Pixel(<span class="number">5</span>, <span class="number">5</span>),</span><br><span class="line">        size: <span class="keyword">new</span> AMap.Size(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> locationData = []; <span class="comment">//存放经纬度的数组</span></span><br><span class="line"><span class="keyword">let</span> status = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; _this.dataList.length; i++) &#123;</span><br><span class="line"><span class="keyword">let</span> locationArr = _this.dataList[i].location.split(<span class="string">","</span>);</span><br><span class="line"><span class="comment">// 判断需要展示的颜色类型</span></span><br><span class="line"><span class="keyword">if</span> (_this.dataList[i].dataList === <span class="number">1</span>) &#123;</span><br><span class="line">    status = <span class="number">0</span>; <span class="comment">//根据下标来相对应样式 例如：绿色对应style数组中的第0个样式</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_this.dataList[i].color === <span class="number">2</span>) &#123;</span><br><span class="line">    status = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (_this.dataList[i].color === <span class="number">3</span>) &#123;</span><br><span class="line">    status = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">locationData.push(&#123;</span><br><span class="line">    lnglat: locationArr,</span><br><span class="line">    style: status <span class="comment">// 对应的status相对应的样式 style</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点放置</span></span><br><span class="line"><span class="keyword">let</span> mass = <span class="keyword">new</span> AMap.MassMarks(locationData, &#123;</span><br><span class="line">    opacity: <span class="number">0.8</span>,</span><br><span class="line">    zIndex: <span class="number">111</span>,</span><br><span class="line">    cursor: <span class="string">"pointer"</span>,</span><br><span class="line">    style: style</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> marker = <span class="keyword">new</span> AMap.Marker(&#123; <span class="attr">content</span>: <span class="string">" "</span>, <span class="attr">map</span>: map &#125;);</span><br><span class="line">    mass.on(<span class="string">"mouseover"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    marker.setPosition(e.data.lnglat); <span class="comment">//用户相对应的经纬度</span></span><br><span class="line">    marker.setLabel(&#123; <span class="attr">content</span>: e.data.name &#125;); <span class="comment">//用户相对应的名字</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">mass.setMap(map);</span><br></pre></td></tr></table></figure><h4 id="5-完成，启动"><a href="#5-完成，启动" class="headerlink" title="5. 完成，启动"></a>5. 完成，启动</h4><p><code>npm run serve</code>启动，查看该示例，得到应有效果：</p><p><img src="/images/posts/地图01.png" alt="实现效果" title="实现效果"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;最近两年比较热门的一个名次叫“数据可视化”，在前端方向大致体现为&lt;code&gt;地图数据展示&lt;/code&gt;以及&lt;code&gt;图表类数据展示&lt;/code&gt;。那么，如何在vue中使用基于高德地图来做地图数据可视化以及加上e Charts的图表类型数据可视化呢？接下来会分三篇文章来进行概述，最终实现下图内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/vue+amap+echarts示例.gif&quot; alt=&quot;最终效果&quot; title=&quot;最终效果&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="高德地图" scheme="https://www.zhuxingmin.com/tags/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>lib-flexible适配大屏方案（附移动端适配）</title>
    <link href="https://www.zhuxingmin.com/2019/10/24/lib-flexible%E9%80%82%E9%85%8D%E5%A4%A7%E5%B1%8F%E6%96%B9%E6%A1%88/"/>
    <id>https://www.zhuxingmin.com/2019/10/24/lib-flexible适配大屏方案/</id>
    <published>2019-10-24T01:45:31.000Z</published>
    <updated>2019-10-25T01:25:02.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;相信大多数移动端前端开发者都是用过<code>lib-flexible</code>来作为移动端适配的解决方案。lib-flexible是淘宝项目组开发出来的一个小插件，属于开源项目，可以在各类项目中引入并使用，为移动端的开发者带来了无穷的便利。<br>&emsp;&emsp;但是，有人提出<strong>为什么在屏幕尺寸超出一定分辨率后便不再适配？</strong> 今天针对该问题来尝试给出解决方案。</p><a id="more"></a><hr><h2 id="关于lib-flexible"><a href="#关于lib-flexible" class="headerlink" title="关于lib-flexible"></a>关于lib-flexible</h2><h3 id="1-解读"><a href="#1-解读" class="headerlink" title="1. 解读"></a>1. 解读</h3><p>&emsp;&emsp;lib-flexible会自动在html的head中添加一个<code>meta name=&quot;viewport&quot;</code>的标签，同时会自动设置html的font-size为屏幕宽度除以10，也就是1rem等于html根节点的font-size。假如设计稿的宽度是750px，此时1rem应该等于75px。假如量的某个元素的宽度是150px，那么在css里面定义这个元素的宽度就是 width: 2rem。但是当分辨率大于某个特定值时，它便不再生效。</p><h3 id="2-移动端适配步骤"><a href="#2-移动端适配步骤" class="headerlink" title="2. 移动端适配步骤"></a>2. 移动端适配步骤</h3><p>&emsp;&emsp;一般而言，<code>lib-flexible</code>并不独立出现，而是搭配<code>px2rem-loader</code>一起做适配方案，目的是<strong>自动将css中的px转换成rem</strong>。以下为它在vue中的使用。</p><h4 id="2-1-安装-lib-flexible"><a href="#2-1-安装-lib-flexible" class="headerlink" title="2.1 安装 lib-flexible"></a>2.1 安装 lib-flexible</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install lib-flexible --save-dev</span><br></pre></td></tr></table></figure><h4 id="2-2-引入-lib-flexible"><a href="#2-2-引入-lib-flexible" class="headerlink" title="2.2 引入 lib-flexible"></a>2.2 引入 lib-flexible</h4><p>在<code>main.js</code>中引入lib-flexible<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// px2rem 自适应</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'lib-flexible'</span></span><br></pre></td></tr></table></figure></p><h4 id="2-3-安装-px2rem-loader"><a href="#2-3-安装-px2rem-loader" class="headerlink" title="2.3 安装 px2rem-loader"></a>2.3 安装 px2rem-loader</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install px2rem-loader --save-dev</span><br></pre></td></tr></table></figure><h4 id="2-4-配置-px2rem-loader"><a href="#2-4-配置-px2rem-loader" class="headerlink" title="2.4 配置 px2rem-loader"></a>2.4 配置 px2rem-loader</h4><p>分两种情况：</p><ul><li>vue-cli 2.x</li><li>vue-cli 3.x</li></ul><h5 id="2-4-1-第1种"><a href="#2-4-1-第1种" class="headerlink" title="2.4.1 第1种"></a>2.4.1 第1种</h5><p>如果是2.x版本。</p><ol><li><p>在<code>build/utils.js</code>中，找到<code>exports.cssLoaders</code>，作出如下修改：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> px2remLoader = &#123;</span><br><span class="line">    loader: <span class="string">'px2rem-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">        remUint: <span class="number">75</span> <span class="comment">// 以设计稿750为例， 750 / 10 = 75</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>继续找到<code>generateLoaders</code>中的<code>loaders</code>配置，作出如下配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注释掉这一行</span></span><br><span class="line"><span class="comment">// const loaders = options.usePostCSS ? [cssLoader, postcssLoader] : [cssLoader]</span></span><br><span class="line"><span class="comment">// 修改为</span></span><br><span class="line"><span class="keyword">const</span> loaders = [cssLoader, px2remLoader]</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (options.usePostCSS) &#123;</span><br><span class="line">  loaders.push(postcssLoader)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重新<code>npm run dev</code>，完成。</p><h5 id="2-4-2-第2种"><a href="#2-4-2-第2种" class="headerlink" title="2.4.2 第2种"></a>2.4.2 第2种</h5><p>如果是3.x版本。由于3.x版本需要自己配置，在项目根目录新建文件<code>vue.config.js</code>，然后如下配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    css: &#123;</span><br><span class="line">        loaderOptions: &#123;</span><br><span class="line">            css: &#123;&#125;,</span><br><span class="line">            postcss: &#123;</span><br><span class="line">                plugins: [</span><br><span class="line">                    <span class="built_in">require</span>(<span class="string">'postcss-px2rem'</span>)(&#123;</span><br><span class="line">                        <span class="comment">// 以设计稿750为例， 750 / 10 = 75</span></span><br><span class="line">                        remUnit: <span class="number">75</span></span><br><span class="line">                    &#125;),</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><p>然后，重新<code>npm run dev</code>，完成。</p><h3 id="3-大屏怎么办？"><a href="#3-大屏怎么办？" class="headerlink" title="3. 大屏怎么办？"></a>3. 大屏怎么办？</h3><p>&emsp;&emsp;正常情况下，如果是教程，那么到此就结束了。可本文中心是如何在大屏中正常使用<code>lib-flexible</code>。<br>&emsp;&emsp;例如我们屏幕尺寸要做以<code>3840 x 2160</code>为设计稿的适配，那么我们的remUnit的值则改为384。然后呢？重启项目，发现……咦？布局全部乱掉！经过排查，自己的代码基本上不会导致该问题的出现，那么只能是源码在作怪了。<strong>重点来了。</strong></p><h4 id="3-1-找到源码"><a href="#3-1-找到源码" class="headerlink" title="3.1 找到源码"></a>3.1 找到源码</h4><p>打开<code>./node_modules/lib-flexible/flexible.js</code>，找到如下片段源码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">refreshRem</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = docEl.getBoundingClientRect().width;</span><br><span class="line">    <span class="keyword">if</span> (width / dpr &gt; <span class="number">540</span>) &#123;</span><br><span class="line">        width = <span class="number">540</span> * dpr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> rem = width / <span class="number">10</span>;</span><br><span class="line">    docEl.style.fontSize = rem + <span class="string">'px'</span>;</span><br><span class="line">    flexible.rem = win.rem = rem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;从此段源码中我们不难看出，当屏幕宽度除以dpr（dpr是一个倍数，此处一般为1）大于540这个特定值的时候，那么就不再进行适配了。那么我们如何解决这个问题呢？</p><h4 id="3-2-修改源码"><a href="#3-2-修改源码" class="headerlink" title="3.2 修改源码"></a>3.2 修改源码</h4><p>&emsp;&emsp;在上述源码中，进行修改。例如我要适配的大屏幕尺寸是基于3840的设计稿，而要求最小范围是1980，最大为5760，那么我们要修改的则变为：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">refreshRem</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = docEl.getBoundingClientRect().width;</span><br><span class="line">    <span class="keyword">if</span> (width / dpr &lt; <span class="number">1980</span>) &#123;</span><br><span class="line">        width = <span class="number">1980</span> * dpr;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (width / dpr &gt; <span class="number">5760</span>) &#123;</span><br><span class="line">        width = <span class="number">5760</span> * dpr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> rem = width / <span class="number">10</span>;</span><br><span class="line">    docEl.style.fontSize = rem + <span class="string">'px'</span>;</span><br><span class="line">    flexible.rem = win.rem = rem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="3-3-重启，完成"><a href="#3-3-重启，完成" class="headerlink" title="3.3 重启，完成"></a>3.3 重启，完成</h4><p>&emsp;&emsp;修改完成后，重启项目，则会适配到相应的尺寸。此外还有一个提示，当脱离掉<code>node_modules</code>重新<code>npm install</code>项目依赖时还是需要重新修改一遍的，千万别忘了！</p><hr><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;相信大多数移动端前端开发者都是用过&lt;code&gt;lib-flexible&lt;/code&gt;来作为移动端适配的解决方案。lib-flexible是淘宝项目组开发出来的一个小插件，属于开源项目，可以在各类项目中引入并使用，为移动端的开发者带来了无穷的便利。&lt;br&gt;&amp;emsp;&amp;emsp;但是，有人提出&lt;strong&gt;为什么在屏幕尺寸超出一定分辨率后便不再适配？&lt;/strong&gt; 今天针对该问题来尝试给出解决方案。&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="前端" scheme="https://www.zhuxingmin.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="源码" scheme="https://www.zhuxingmin.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>《中国机长》随笔</title>
    <link href="https://www.zhuxingmin.com/2019/10/23/%E3%80%8A%E4%B8%AD%E5%9B%BD%E6%9C%BA%E9%95%BF%E3%80%8B%E9%9A%8F%E7%AC%94/"/>
    <id>https://www.zhuxingmin.com/2019/10/23/《中国机长》随笔/</id>
    <published>2019-10-23T02:36:31.000Z</published>
    <updated>2019-10-23T12:08:17.175Z</updated>
    
    <content type="html"><![CDATA[<h3 id="电影概述"><a href="#电影概述" class="headerlink" title="电影概述"></a>电影概述</h3><blockquote><p>&emsp;&emsp;《中国机长》（The Captain）是由刘伟强执导，于勇敢编剧，李锦文监制，张涵予、欧豪、杜江、袁泉、张天爱、李沁领衔主演，张雅玫、杨祺如、高戈主演的剧情传记灾难片。<br>&emsp;&emsp;该片根据2018年5月14日四川航空3U8633航班机组成功处置特情真实事件改编，讲述了“中国民航英雄机组”成员与119名乘客遭遇极端险情，在万米高空直面强风、低温、座舱释压的多重考验。</p></blockquote><a id="more"></a><p><img src="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=87e67e366281800a7ae8815cd05c589f/8601a18b87d6277fc891b58126381f30e824fc8c.jpg" alt="剧照" title="剧照"></p><h3 id="剧情简介"><a href="#剧情简介" class="headerlink" title="剧情简介"></a>剧情简介</h3><blockquote><p>&emsp;&emsp;四川航空3U8633航班机组执行航班任务时，在万米高空突遇驾驶舱风挡玻璃爆裂脱落、座舱释压的极端罕见险情。机组成员凭借着极少仍在工作状态的仪器，艰难地进行手动驾驶。座舱释压发生时，乘务组立即执行释压处置程序，指导旅客使用氧气面罩，并训练有素地喊出：“请大家相信我们，相信我们有信心、有能力带领大家安全落地。”生死关头，英雄机组的正确处置，确保了机上全体人员的生命安全，创造了世界民航史上的奇迹。</p></blockquote><h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>&emsp;&emsp;这部电影是国庆之后公里决定一起去刷的。先吹一波，公司福利是真的好，由于《我和我的祖国》热映，大部分员工自己去看过了，因此选择了大部分还没来得及看的《中国机长》。由于是包场看，机智的综管部门还顺便做了广告：在影院各大屏以及广告位“免费”播放了一天的公司广告，哈哈，完美～～<br>&emsp;&emsp;扯回正题，谈一下看完电影的直观感受。<br>&emsp;&emsp;首先，却是低估了空姐们”端茶倒水“日常背后的工作，如培训、训练、检查、准备等各种非一日之功的工作。<br>&emsp;&emsp;然后，谈谈电影本身。很早就看过关于真实事件的访谈。真实中从起飞到结束总用时42分钟，其中的惊险程度比起电影甚至更加惊现，当然了，没有那些电闪雷鸣的虚构点。但是有点小失望的是，在飞机遇事之时，原型中机长一大波神操作，硬是在极其复杂的条件下完美的完成了三十多项功能操作（错一个可能就……），而电影中期待了许久的神操作，迟迟没有出现，反而全片一再强调民航全体员工的职业素养。当然，对于现实场景，一定是要大加鼓励的，但是全剧中尴尬之处也在于此。还有就是，剧中并没有交代飞机遇事原因。内中外三层玻璃，内层先裂开，原因几何等并没有交代清楚。于是，本来应该是该公司设备有问题的，经过机长系列操作后，完美的掩饰 这个问题的存在。<br>&emsp;&emsp;抛开电影，我们学到了什么？<br>&emsp;&emsp;<code>过硬的技能</code>。这点毋庸置疑，真实事件中，过硬的技能特长，较多的经验，系列史诗级的操作，没有一个不慎，没有机毁人亡。因为实力，所以幸运。对比我们自己，是否在自己专业中拥有日复一日的训练，是否有追求更高的能力特长呢？<br>&emsp;&emsp;<code>更高的素养</code>。从职业素养来讲，影片中所有的人清楚自己岗位职责，清楚自己要做什么，并且明白要做好什么，这两点是有本质区别的，就像我的工作中， 做出一个页面和 做好一个页面是存在本质差的。<br><img src="https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike180%2C5%2C5%2C180%2C60/sign=0a050606825494ee932f074b4c9c8b9b/314e251f95cad1c85e5d7b9e713e6709c83d51a1.jpg" alt="剧照" title="剧照"><br>&emsp;&emsp;<code>更好的团队协作</code>。影片中所突出展示的，团队协作也是一大亮点。无论是团内成员相互鼓励，还是团队之间的互相支持，都是井井有序。不因为我是员工中的一个，众多员工我不起眼，就去给团队抹黑，也不因为我是领导就特立独行一党专政，脱离规章无视制度。无论什么岗位，想要有高效产出，就要信任制度，信任队友。如果航班服务人员和乘客们不信任机长，那飞机内必然暴乱；如果机长之间不相互协作，个人凭借自身能力去驾驶飞行，相互之间就会出现信任差而出现操作上的失误；如果团队之间没有良好的协同，那是否能随意升降飞机高度？飞机即使能开回地面，降落点在哪儿？当这一些列的问题被井井有序的执行之时，就会感慨在一个完整的制度下相互配合是多么的重要。</p><p><strong><em>敬畏生命 敬畏职责 敬畏规章</em></strong></p>]]></content>
    
    <summary type="html">
    
      敬畏生命 敬畏职责 敬畏规章
    
    </summary>
    
      <category term="读书笔记" scheme="https://www.zhuxingmin.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="随笔" scheme="https://www.zhuxingmin.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="电影" scheme="https://www.zhuxingmin.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>开发姿势篇——动效设计1</title>
    <link href="https://www.zhuxingmin.com/2019/10/12/%E5%BC%80%E5%8F%91%E5%A7%BF%E5%8A%BF%E7%AF%87%E2%80%94%E2%80%94%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A11/"/>
    <id>https://www.zhuxingmin.com/2019/10/12/开发姿势篇——动效设计1/</id>
    <published>2019-10-12T07:27:57.000Z</published>
    <updated>2019-10-23T12:08:17.176Z</updated>
    
    <content type="html"><![CDATA[<h2 id="动效示例"><a href="#动效示例" class="headerlink" title="动效示例"></a>动效示例</h2><p><img src="/images/posts/正方体动效.gif" alt="正方体动效" title="正方体动效"></p><a id="more"></a><h2 id="关于动画"><a href="#关于动画" class="headerlink" title="关于动画"></a>关于动画</h2><blockquote><p>&emsp;&emsp;动画的英文有很多表述，如animation、cartoon、animated cartoon、cameracature。其中较正式的 “Animation” 一词源自于拉丁文字根anima，意思为“灵魂”，动词animate是“赋予生命”的意思，引申为使某物活起来的意思。<strong>所以动画可以定义为使用绘画的手法，创造生命运动的艺术。</strong></p></blockquote><hr><h2 id="动效设计"><a href="#动效设计" class="headerlink" title="动效设计"></a>动效设计</h2><p>&emsp;&emsp;继上篇基础开发篇，了解页面基础搭建和布局之后，接着便是对用户更加友好的动效体验。上面关于动画中提起，动画可以定义为使用绘画的手法，创造生命运动的艺术，因此在基础篇后，如何让页面/元素动起来，就是我们开发中的乐趣与艺术所在。<br>&emsp;&emsp;本片总结参考<code>凹凸实验室小册——大厂h5开发实战手册</code>。</p><h3 id="0-分析"><a href="#0-分析" class="headerlink" title="0. 分析"></a>0. 分析</h3><p>&emsp;&emsp;完成上述动画，我们需要做以下几步</p><ul><li>图片素材准备</li><li>基础布局</li><li>立体尝试</li><li>帧动画准备</li><li>动起来</li></ul><p>接下来一步步来。</p><h3 id="1-素材"><a href="#1-素材" class="headerlink" title="1. 素材"></a>1. 素材</h3><p>&emsp;&emsp;任意图片即可，满足正方体六面使用。</p><h3 id="2-基础布局"><a href="#2-基础布局" class="headerlink" title="2. 基础布局"></a>2. 基础布局</h3><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"move"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube showDefault"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube-face c-front"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"xxx"</span> <span class="attr">alt</span>=<span class="string">"photo1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube-face c-back"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">".xxx"</span> <span class="attr">alt</span>=<span class="string">"photo2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube-face c-top"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"xxx"</span> <span class="attr">alt</span>=<span class="string">"photo3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube-face c-bottom"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"xxx"</span> <span class="attr">alt</span>=<span class="string">"photo4"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube-face c-left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"xxx"</span> <span class="attr">alt</span>=<span class="string">"photo5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube-face c-right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"xxx"</span> <span class="attr">alt</span>=<span class="string">"photo6"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="css-此处用的scss"><a href="#css-此处用的scss" class="headerlink" title="css(此处用的scss)"></a>css(此处用的scss)</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cube-size</span>: <span class="number">500px</span>;</span><br><span class="line"><span class="variable">$cube-radius</span>: <span class="variable">$cube-size</span> / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.move</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$cube-size</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$cube-size</span>;</span><br><span class="line">    <span class="attribute">perspective</span>: <span class="number">1000px</span>;    <span class="comment">/* 设置元素被查看位置的视图 */</span></span><br><span class="line">    <span class="comment">/*-webkit-perspective: 1000px;*/</span></span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.cube</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;   <span class="comment">/* 3d */</span></span><br><span class="line"></span><br><span class="line">        &amp;-face&#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">opacity</span>: .<span class="number">95</span>;</span><br><span class="line">            <span class="attribute">backface-visibility</span>: visible;   <span class="comment">/* 隐藏被旋转元素的背面 */</span></span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">img</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">                <span class="attribute">display</span>: block;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;到此处为止，基础布局已经可以了，只是由于没有给六个面单独设置3d效果，因此看到的是六张图叠加在一起，效果不够明显。接下来尝试让它变得更加立体。</p><h3 id="3-立体尝试"><a href="#3-立体尝试" class="headerlink" title="3. 立体尝试"></a>3. 立体尝试</h3><p>&emsp;&emsp;当然，想要立体，还是需要给六个面依次设置。本小结需要了解css3的两个特性：<code>transform</code>和<code>translate</code>，然后继续布局：<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cube-size</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="variable">$cube-radius</span>: <span class="variable">$cube-size</span> / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.move</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$cube-size</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">$cube-size</span>;</span><br><span class="line">    <span class="attribute">perspective</span>: <span class="number">1000px</span>;    <span class="comment">/* 设置元素被查看位置的视图 */</span></span><br><span class="line">    -webkit-<span class="attribute">perspective</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.cube</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;   <span class="comment">/* 3d */</span></span><br><span class="line"></span><br><span class="line">        &amp;-face&#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">opacity</span>: .<span class="number">95</span>;</span><br><span class="line">            <span class="attribute">backface-visibility</span>: visible;   <span class="comment">/* 隐藏被旋转元素的背面 */</span></span><br><span class="line"></span><br><span class="line">            &amp;<span class="selector-class">.c-front</span>&#123;</span><br><span class="line">                <span class="attribute">transform</span>: translateZ( <span class="variable">$cube-radius</span> );</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;<span class="selector-class">.c-back</span>&#123;</span><br><span class="line">                <span class="attribute">transform</span>: rotateX( -<span class="number">180deg</span> ) translateZ( <span class="variable">$cube-radius</span> );</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;<span class="selector-class">.c-top</span>&#123;</span><br><span class="line">                <span class="attribute">transform</span>: rotateX( <span class="number">90deg</span> ) translateZ( <span class="variable">$cube-radius</span> );</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;<span class="selector-class">.c-bottom</span>&#123;</span><br><span class="line">                <span class="attribute">transform</span>: rotateX( -<span class="number">90deg</span> ) translateZ( <span class="variable">$cube-radius</span> );</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;<span class="selector-class">.c-left</span>&#123;</span><br><span class="line">                <span class="attribute">transform</span>: rotateY( -<span class="number">90deg</span> ) translateZ( <span class="variable">$cube-radius</span> );</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;<span class="selector-class">.c-right</span>&#123;</span><br><span class="line">                <span class="attribute">transform</span>: rotateY( <span class="number">90deg</span> ) translateZ( <span class="variable">$cube-radius</span> );</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">img</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">                <span class="attribute">display</span>: block;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/images/posts/动效设计1-1.png" alt="动效设计1-1" title="动效设计1-1"></p><p>&emsp;&emsp;此时，我们将得到一个正面的结构体如上所示。那么我们如何让它展示的更加立体呢？给<code>.cube</code>添加代码，使其根据自身有一定的角度偏移量，然后得到更加立体的效果如下：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.showDefault</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>( - $cube-radius ) <span class="built_in">rotateY</span>( -20deg ) <span class="built_in">rotateX</span>(-20deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/images/posts/动效设计1-2.png" alt="动效设计1-2" title="动效设计1-2"></p><p>&emsp;&emsp;ok，至此我们已经将基本效果完成。接下来，如何给它赋予灵魂，使其动起来呢？</p><h3 id="4-帧动画准备"><a href="#4-帧动画准备" class="headerlink" title="4. 帧动画准备"></a>4. 帧动画准备</h3><p>&emsp;&emsp;首先需要了解以下<code>帧动画（关键帧动画）</code></p><blockquote><p>&emsp;&emsp;任何动画要表现运动或变化，至少前后要给出两个不同的关键状态，而中间状态的变化和衔接电脑可以自动完成，在Flash中，表示关键状态的帧动画叫做关键帧动画。<br>&emsp;&emsp;所谓关键帧动画，就是给需要动画效果的属性，准备一组与时间相关的值，这些值都是在动画序列中比较关键的帧中提取出来的，而其他时间帧中的值，可以用这些关键值，采用特定的插值方法计算得到，从而达到比较流畅的动画效果。</p></blockquote><p>&emsp;&emsp;那么，在css中，关键帧动画两个内容需要掌握，可以从MDN或者别的网站上学习关于这两个内容：</p><ul><li>关键帧(@keyframes)</li><li>animation属性</li></ul><p>&emsp;&emsp;了解之后，我们可以来定制我们的关键帧动画了。通过分析可得，我们要展示比较安全的动画效果，此处需要这设置6个关键动画，分别展示正方体的六个面。那么我们便从0%-100%分别设置六个面即可。如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 帧动画 */</span></span><br><span class="line">@<span class="keyword">keyframes</span> autoRun &#123;</span><br><span class="line">    <span class="comment">/* front */</span></span><br><span class="line">    0%, 100%&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateZ</span>( -$cube-radius );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* back */</span></span><br><span class="line">    16<span class="selector-class">.5</span>%&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateZ</span>( -$cube-radius ) <span class="built_in">rotateX</span>( -180deg );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* left */</span></span><br><span class="line">    33%&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateZ</span>( -$cube-radius ) <span class="built_in">rotateY</span>( 90deg );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* right */</span></span><br><span class="line">    49<span class="selector-class">.5</span>%&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateZ</span>( -$cube-radius ) <span class="built_in">rotateY</span>( -90deg );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* top */</span></span><br><span class="line">    66%&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateZ</span>( -$cube-radius ) <span class="built_in">rotateX</span>( -90deg );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* bottom */</span></span><br><span class="line">    82<span class="selector-class">.5</span>%&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateZ</span>( -$cube-radius ) <span class="built_in">rotateX</span>( 90deg );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-动起来"><a href="#5-动起来" class="headerlink" title="5. 动起来"></a>5. 动起来</h3><p>&emsp;&emsp;设置完了帧动画，我们关键在于运用。那如何将动画引入到我们的css中去呢？<strong>首先</strong>，确定位置：我们要使正方体动起来，因此添加到<code>.cube</code>内；<strong>其次</strong>，我们要添加帧动画，因此要写明帧动画名称，也就是刚才定义的<code>autoRun</code>；<strong>最后</strong>，设置动画相关属性，如几秒加载完成、循环播放、渐进式等等。示例如下：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.cube</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: autoRun ease <span class="number">10s</span> alternate infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;最终，得到效果图展示的立方体动效：<br><img src="/images/posts/正方体动效.gif" alt="正方体动效" title="正方体动效"></p><h3 id="end"><a href="#end" class="headerlink" title="end"></a>end</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;动效示例&quot;&gt;&lt;a href=&quot;#动效示例&quot; class=&quot;headerlink&quot; title=&quot;动效示例&quot;&gt;&lt;/a&gt;动效示例&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/posts/正方体动效.gif&quot; alt=&quot;正方体动效&quot; title=&quot;正方体动效&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="css" scheme="https://www.zhuxingmin.com/tags/css/"/>
    
      <category term="动效" scheme="https://www.zhuxingmin.com/tags/%E5%8A%A8%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>开发姿势篇——基础开发</title>
    <link href="https://www.zhuxingmin.com/2019/10/09/%E5%BC%80%E5%8F%91%E5%A7%BF%E5%8A%BF%E7%AF%87%E2%80%94%E2%80%94%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/"/>
    <id>https://www.zhuxingmin.com/2019/10/09/开发姿势篇——基础开发/</id>
    <published>2019-10-09T06:05:16.000Z</published>
    <updated>2019-10-23T12:08:17.177Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>&emsp;&emsp;近期学习了一下大厂h5开发实战内容，并且参考实战手册做一些记录。大概包括以下几个方面内容：</p><ol><li>基础页面开发；</li><li>响应式页面开发；</li><li>滑屏应用开发；</li><li>动效开发；（若干篇章）</li></ol><p>&emsp;&emsp;接下来会根据以上几个方向来进行总结和概述。（可参考<a href="https://juejin.im/book/5a7bfe595188257a7349b52a?referrer=5b6954626fb9a04fb13708c2" target="_blank" rel="noopener">掘金小册——大厂h5开发实战手册</a>）</p><hr><h2 id="基础页面开发"><a href="#基础页面开发" class="headerlink" title="基础页面开发"></a>基础页面开发</h2><p>&emsp;&emsp;很多开发者可能问，不就是画ui吗，有什么好说的呢？自然，基础页面开发是作为h5开发者，最为基础的能力。但是<strong>完成一个页面</strong>和<strong>做好一个页面</strong>是有本质区别的。因此，基础篇必不可少。<br>&emsp;&emsp;那，上菜吧。</p><h3 id="一、-能力要求"><a href="#一、-能力要求" class="headerlink" title="一、 能力要求"></a>一、 能力要求</h3><p>&emsp;&emsp;你以为是简单的html/css/js吗？emm,对，但还不够。</p><ul><li>html/css</li><li>JavaScript（简单脚本）</li><li>切图</li></ul><p>&emsp;&emsp;你没看错，【切图】也在能力要求范围内。不会「切图」意味着我们无法将设计稿中的图层元素转换成为网页中所需要的图片，那么产品所要求的高保真还原设计稿便是更不能企及了。</p><h3 id="二、-案例"><a href="#二、-案例" class="headerlink" title="二、 案例"></a>二、 案例</h3><p>如果我们得到设计稿如下图：<br><img src="/images/posts/网页设计稿示例.jpg" alt="网页设计稿示例"></p><p>&emsp;&emsp;通常，我们在ui设计师得到类似的.psd文件，然后开始着手开发。那么我们在开发中一般步骤如下：</p><blockquote><ol><li>设计稿审查;</li><li>编写页面骨骼框架;</li><li>填充网页血肉内容;</li><li>润色;</li><li>兼容性测试;</li></ol></blockquote><p>&emsp;&emsp;我们一个一个来。</p><h4 id="1-设计稿审查"><a href="#1-设计稿审查" class="headerlink" title="1. 设计稿审查"></a>1. 设计稿审查</h4><p><strong>审查意义：</strong></p><ul><li>了解设计稿的开发友好性</li><li>了解设计稿的排版布局及内容构成</li></ul><p>&emsp;&emsp;此处也是常人的正向思维，拿到设计稿，先熟悉了解内容，然后思考以下是否有漏洞，或者是否有更好的建议与意见，其中某些模块细节如何处理，考虑复用性、易拓展性等，然后规划某些模块是否编写为可复用组件，复用范围等。<br>&emsp;&emsp;还以上图为例，明显多处可复用。那么可复用的又大致可分为两种类别：<code>跨页面复用</code>以及<code>当前页面复用</code>。那么该案例设计稿则可以划分如下：</p><ol><li>跨页面复用组件： 头部导航、脚部信息；</li><li>当前页面复用组件： 如下图中1、2</li></ol><p><img src="/images/posts/当前页面复用组件示例.png" alt="当前页面复用组件示例"></p><p>&emsp;&emsp;这些展示的只是该过程中最为基础的审查，当然，如果条件允许的话，团队内可以学习凹凸实验室，尝试总结出一个类似的审查清单：</p><blockquote><ul><li>确定设计稿的开发友好性（是否有还原成本高或无法还原的地方）</li><li>确定一些特殊的元素是否有合理的边界处理（如文案超出外层容器的边界怎么办）</li><li>确定页面的框架结构（Layout）</li><li>确定跨页面可复用的组件（Site Component）</li><li>确定当前页面可复用的组件（Page Component）</li><li>……</li></ul></blockquote><p>&emsp;&emsp;此处不再一一赘述。</p><h4 id="2-编写页面骨骼框架"><a href="#2-编写页面骨骼框架" class="headerlink" title="2. 编写页面骨骼框架"></a>2. 编写页面骨骼框架</h4><p>&emsp;&emsp;审查结束后，心里基本上有了比较成型的代码模型了，那么接下来就是<code>编写页面骨骼框架</code>了。通俗的来讲，就是搭架子。那么架子怎么搭？仁者见仁，但是最为基础的却都是统一的，比如必须掌握的知识点——盒模型。当然，此处不会讲解关于盒模型以及兼容性和差异性，还不太了解的可以自行搜索或者查询<a href="https://www.w3school.com.cn/css/css_boxmodel.asp" target="_blank" rel="noopener">w3school</a>。我们需要掌握盒模型在不同浏览器下的差异，盒模型宽高计算方法、内外边距以及一些兼容性问题的解决方案。然后，在摸清楚兼容性差异并解决之，达到统一后，便开始着手开发。<br>&emsp;&emsp;开发第一步：<strong>布局</strong>。<br>&emsp;&emsp;开发过程中，我们会写无数个块级元素，那么其实每个块级元素都相当于是一个盒模型，而一张完整的页面，正是由多个盒模型组合在一起组成的。如此来讲，我们的页面布局便是重中之重：我们应该如何<strong>合理</strong>的布局呢？想回答这个问题，不得不啰嗦一下目前常见的几种布局方式：</p><ol><li>文档流布局;</li><li>浮动布局(float);</li><li>绝对布局(absolute);</li><li>弹性布局(flex);</li><li>网格布局(grid)；</li></ol><p>&emsp;&emsp;在这几种常见的布局方式中，我们在经过第一步的审查设计稿之后，已经对开发内容有了一个大致的了解，起码架子方面是可以肯定的，因此根据设计稿内容选择合适的布局即可。目前一般页面布局都会属于混合布局，为了展示更加酷炫和对用户更加友好的内容，布局难度也在不断增加。但所谓复杂的布局，也要回归到基础布局上来回嵌套，因此这几种布局是必须全部熟悉并且掌握，合理运用。</p><h4 id="3-填充网页血肉内容"><a href="#3-填充网页血肉内容" class="headerlink" title="3. 填充网页血肉内容"></a>3. 填充网页血肉内容</h4><p>&emsp;&emsp;在页面布局完成之后，下一步就是要开始填充页面内容了，图片、音视频、文字混排等等，都让我们的页面更加鲜活和立体。如果把网页开发比喻成房屋建设，那么我们前面完成的就是打好了地基。就此结束吗？醒醒，工头让我喊你搬砖。根据设计，砌墙、装修、水管电线等等都要一步步的来啊，任重而道远。<br>&emsp;&emsp;在小册中，凹凸实验室此处概述重点讲解了前端另一大能力——切图。我不再作出相关介绍，关于切图姿势、如何高效切图等，都可以查找相关介绍。而在此处，我额外补充一点：优化。我所说的优化不是代码优化，而是引入的资源优化，比如图片、音视频等。因此一些小技巧，如雪碧图、占位图、预加载、懒加载等功能的特性便需要掌握。</p><h4 id="4-润色"><a href="#4-润色" class="headerlink" title="4. 润色"></a>4. 润色</h4><p>&emsp;&emsp;何谓润色？且不要多想，当作普通的css编写即可。<br>&emsp;&emsp;其实在我们基础页面开发过程中，最容易获取成就感的地方，就在于润色过程，就好似给图画上色，哦不，是拍照化妆开美颜加滤镜，效果感十足。但是写的时候容易，维护却是一大难题。<br>&emsp;&emsp;往往在写完某个页面一段时间后，需要对其中某个样式就行维护时，找到该css位置需要理一下思路，那么……我们怎么通过某种规范来规避此问题或者是使该问题简单化呢？</p><h5 id="BEM"><a href="#BEM" class="headerlink" title="BEM"></a>BEM</h5><blockquote><p>&emsp;&emsp;BEM(boundary element method，边界元法)是一种继有限元法之后发展起来的一种新数值方法，与有限元法在连续体域内划分单元的基本思想不同，边界元法是在定义域的边界上划分单元，用满足控制议程的函数去逼近边界条件。所以边界元法与有限元相比具有单元的未知数少，数据准备简单等优点。但用边界元法解非线性问题时，遇到同非线性项相对应的区域积分，这种积分在奇异点附近有强烈的奇异性，使求解变得困难。</p></blockquote><p>那么在我们的css代码中，如何使用BEM呢？</p><blockquote><p>BEM 的意思就模块（Block）、元素（Element）、修饰符（Modifier），使用这种命名方式可以让 CSS 的类名变得有实际意义且能自我解释，具有更高的开发友好性。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Block - 模块，名字的单词之间用 `-` 符号连接</span><br><span class="line">Element - 元素，模块中的子元素，用 `__` 符号连接</span><br><span class="line">Modifier - 修饰符，表示父元素或子元素的其他形态，用 `--` 符号连接</span><br></pre></td></tr></table></figure><h5 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h5><p>普通写法：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"footer-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>BEM写法：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"footer-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“footer-box__left”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“footer-box__right”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;对比后可发现，模块的命名已经语义化，后期维护减少了些许的复杂程度，页面的渲染效率提升了，但是……会不会命名太复杂了呢？不得不说，sacc/less是个好东西。我们搭配其来使用，则可编写为：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer-box</span>&#123;</span><br><span class="line">    &amp;__left&#123; ... &#125;</span><br><span class="line">    &amp;__right&#123; ... &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="5-兼容性测试"><a href="#5-兼容性测试" class="headerlink" title="5. 兼容性测试"></a>5. 兼容性测试</h4><p>&emsp;&emsp;在页面开发完成之后，别急，换个浏览器试试？换台设备试试？emm，内心是拒绝的。<br>&emsp;&emsp;兼容性测试是开发完成后必不可少的一步。由于各浏览器内核差异，版本差异甚至不同设备之间的分辨率差距，会导致同一个页面在不同设备不同浏览器中展现出千奇百怪的姿态来。为了完成页面的统一性，我们不得不一个个的做兼容，这也是印证了<code>IE 虐我千百遍，我待 IE 如初恋</code>这句话。</p><h5 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h5><blockquote><p>渐进增强与平稳退化。</p></blockquote><p>根据小册提议，兼容下问题解决流程步骤如下：</p><ol><li>确认触发的场景：什么浏览器，什么版本，什么情况下触发的问题，做到稳定复现。</li><li>找出问题原因：是什么问题导致的，具体表现如何？</li><li>确定解决办法：参考现成的解决方案，如哪些属性不能使用以及相应的 Hack 处理。</li><li>收集兼容性处理方法，积累成文档。</li></ol><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>&emsp;&emsp;我们根据案例，分析了基础开发的五个步骤：设计稿审查;编写页面骨骼框架;填充网页血肉内容;润色;兼容性测试。每个步骤有了一个简单的介绍，但是不够深入，总体来讲还是对基础开发有了一个大致的了解。至于更加深入的内容，下篇接着写。</p>]]></content>
    
    <summary type="html">
    
      「IE 虐我千百遍，我待 IE 如初恋」
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="基础开发" scheme="https://www.zhuxingmin.com/tags/%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/"/>
    
      <category term="大厂手册" scheme="https://www.zhuxingmin.com/tags/%E5%A4%A7%E5%8E%82%E6%89%8B%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>vue中@change兼容问题</title>
    <link href="https://www.zhuxingmin.com/2019/09/20/vue%E4%B8%AD-change%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/"/>
    <id>https://www.zhuxingmin.com/2019/09/20/vue中-change兼容问题/</id>
    <published>2019-09-20T06:32:21.000Z</published>
    <updated>2019-10-23T12:08:17.174Z</updated>
    
    <content type="html"><![CDATA[<h3 id="change问题"><a href="#change问题" class="headerlink" title="@change问题"></a>@change问题</h3><h4 id="1-需求描述"><a href="#1-需求描述" class="headerlink" title="1. 需求描述"></a>1. 需求描述</h4><ul><li>需求：选择日期，当日期改变，则页面相应该日期的某些事件渲染</li><li>条件：<ol><li>移动端</li><li>vue框架</li></ol></li></ul><a id="more"></a><h4 id="2-问题产生及描述"><a href="#2-问题产生及描述" class="headerlink" title="2. 问题产生及描述"></a>2. 问题产生及描述</h4><p><strong>问题： 兼容性差距，由于@change触发方式不同，导致时间加载不够统一，时间触发出现问题。</strong></p><p>描述如下：</p><p>使用vue做移动端时，由于需求需要，需要在页面某处添加一个日期选择的控件。由于不是面向用户，内部使用，因此本着不浪费资源的原则，直接使用h5自带的input：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>emm…CSS样式不再赘述。然后绑定数据,绑定change事件监听值变化：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">v-model</span>=<span class="string">"date"</span> @<span class="attr">change</span>=<span class="string">"selectDate"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">selecrDate () &#123;</span><br><span class="line">    <span class="comment">// do something...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当基本流程敲定后，在pc端没问题。但注意，我们此时讨论的是移动端效果，那么用pc端打开调试工具来模拟移动端机型显然是不足以代表移动端真实场景的，因此需要在真机测试。ok，接下来，差异化出现。<br>由于<code>@change</code>的特性是当监听到数据发生变化时则执行，因此差异便是暴露出来：</p><ul><li>安卓：选择完年月日，点击确定后，数据变化，监听事件起作用；</li><li>iOS： 点击选择日期，选择年，监听到数据变化一次，执行一次<code>selectDate</code>，选择月，监听到数据变化，再次执行，选择日，监听到数据变化，再执行……选择不停，执行不停。</li></ul><p>由于此不同端所存在的差异化，导致了我们必须“兼容”这个问题。那么重点问题出现，如何兼容？</p><h4 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3. 解决方案"></a>3. 解决方案</h4><p>讨论到此，我们必须想办法先解决一个问题：如何在iOS端，阻止掉每一次选择都自动执行<code>selectDate</code>的问题。此时，经过一番探寻查找，发现<code>@blur</code>方法可以替代iOS中的<code>@change</code>，说干就干，盘他：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">v-model</span>=<span class="string">"date"</span> @<span class="attr">blur</span>=<span class="string">"selectDate"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>ok,找个苹果机试一下，完美，选择年月日莫的问题，只有点击确定之后才触发该事件。但，所谓小人得志不可取，兴高采烈的时候发现在安卓机上挂掉了。原因是在安卓机上选完以后，<code>@blur</code>事件并不会触发，除非选择完成之后，点击别的区域来触发此事件。因此，我们又面临一个兼容问题，怎么同时保证在安卓和iOS系统上都能流畅运行呢？<br>有办法——js辨别系统是安卓还是iOS：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> u = navigator.userAgent, app = navigator.appVersion;</span><br><span class="line"><span class="comment">// Android 判断</span></span><br><span class="line"><span class="keyword">const</span> isAndroid = u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Linux'</span>) &gt; <span class="number">-1</span>;</span><br><span class="line"><span class="comment">// iOS 判断</span></span><br><span class="line"><span class="keyword">const</span> isIOS = !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isAndroid) &#123;</span><br><span class="line">    <span class="comment">// 这个是安卓操作系统</span></span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isIOS) &#123;</span><br><span class="line">    <span class="comment">// 这个是iOS操作系统</span></span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>有了此步骤，那接下来的事儿就简单多了：</p><ul><li>如果是安卓系统，则用<code>@change</code>;</li><li>如果是iOS系统，则用<code>@blur</code>;</li><li>由于是移动端，所以不考虑pc～；</li></ul><p>完成～.～！</p><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总结以上，步骤如下：</p><blockquote><ol><li>进入页面，执行js脚本，判断当前设备型号；</li><li>如果是安卓设备，执行<code>@change</code>；</li><li>如果是iOS设备，执行<code>@blur</code>。</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;change问题&quot;&gt;&lt;a href=&quot;#change问题&quot; class=&quot;headerlink&quot; title=&quot;@change问题&quot;&gt;&lt;/a&gt;@change问题&lt;/h3&gt;&lt;h4 id=&quot;1-需求描述&quot;&gt;&lt;a href=&quot;#1-需求描述&quot; class=&quot;headerlink&quot; title=&quot;1. 需求描述&quot;&gt;&lt;/a&gt;1. 需求描述&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;需求：选择日期，当日期改变，则页面相应该日期的某些事件渲染&lt;/li&gt;
&lt;li&gt;条件：&lt;ol&gt;
&lt;li&gt;移动端&lt;/li&gt;
&lt;li&gt;vue框架&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="兼容" scheme="https://www.zhuxingmin.com/tags/%E5%85%BC%E5%AE%B9/"/>
    
  </entry>
  
  <entry>
    <title>《浮生六记》随笔</title>
    <link href="https://www.zhuxingmin.com/2019/09/17/%E3%80%8A%E6%B5%AE%E7%94%9F%E5%85%AD%E8%AE%B0%E3%80%8B%E9%9A%8F%E7%AC%94/"/>
    <id>https://www.zhuxingmin.com/2019/09/17/《浮生六记》随笔/</id>
    <published>2019-09-17T02:36:36.000Z</published>
    <updated>2019-09-17T09:04:48.803Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>浮生若梦，为欢几何</p></blockquote><p><img src="/images/posts/插图.jpeg" alt="插图" title="浮生六记"></p><h3 id="一、-简介"><a href="#一、-简介" class="headerlink" title="一、 简介"></a>一、 简介</h3><h4 id="浮生六记-（清朝沈复著自传体散文）"><a href="#浮生六记-（清朝沈复著自传体散文）" class="headerlink" title="浮生六记 （清朝沈复著自传体散文）"></a>浮生六记 （清朝沈复著自传体散文）</h4><blockquote><p>&emsp;&emsp;《浮生六记》是清朝长洲人沈复（字三白，号梅逸）著于嘉庆十三年（1808年）的自传体散文。清朝王韬的妻兄杨引传在苏州的冷摊上发现《浮生六记》的残稿，只有四卷，交给当时在上海主持申报闻尊阁的王韬，以活字板刊行于1877年。“浮生”二字典出李白诗《春夜宴从弟桃李园序》中“夫天地者，万物之逆旅也；光阴者，百代之过客也。而浮生若梦，为欢几何？”。</p></blockquote><h4 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h4><blockquote><p>&emsp;&emsp;沈复（1763—1825），字三白，号梅逸，长洲（现在江苏苏州）人，清<br>代文学家。工诗画、散文。至今未发现有关他生平的文字记载。据其所著的《浮生六记》来看，他出身于幕僚家庭，没有参加过科举考试，曾以卖画维持生计。与妻子陈芸志趣投合，情感深厚，愿意过一种布衣素食而从事艺术的生活，但因封建礼教的压迫和贫苦生活的磨难，理想终未实现，经历了生离死别的惨痛。妻死后，他去四川充幕僚。此后情况不明。</p></blockquote><h3 id="二、-概要"><a href="#二、-概要" class="headerlink" title="二、 概要"></a>二、 概要</h3><h4 id="作品概述"><a href="#作品概述" class="headerlink" title="作品概述"></a>作品概述</h4><blockquote><p>&emsp;&emsp;这是一部自传体文学的作品，原书六卷，已逸其二，现仅存四卷（有所谓“足本”者，后二记系伪作。书中记叙了作者夫妇间平凡的家居生活，坎坷际遇，和各地浪游闻见。文辞朴素，情感真挚，前人曾有“幽芳凄三角，读之心醉”的评语。本书文字不长，但向为文学爱好者和研究者所重视，影响广泛。</p></blockquote><h4 id="主线"><a href="#主线" class="headerlink" title="主线"></a>主线</h4><blockquote><p>&emsp;&emsp;《浮生六记》以作者夫妇生活为主线，赢余了平凡而又充满情趣的居家生活的浪游各地的所见所闻。作品描述了作者和妻子陈芸情投意合，想要过一种布衣蔬食而从事艺术的生活，由于封建礼教的压迫与贫困生活的煎熬，终至理想破灭。本书文字清新真率，无雕琢藻饰痕迹，情节则伉俪情深，至死不复；始于欢乐，终于忧患，漂零他乡，悲切动人。此外，本书还收录了清代名士冒襄悼念秦淮名妓董小宛的佳作《影梅庵忆语》。</p></blockquote><p><img src="/images/posts/与朋饮酒图.jpeg" alt="与朋饮酒图" title="与朋饮酒图"></p><p><strong><em>《浮生六记》中《闲情记趣》的《童趣》已选入人教版的语文书中。</em></strong></p><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><ul><li>卷一 《闺房记乐》</li><li>卷二 《闲情记趣》</li><li>卷三 《坎坷记愁》</li><li>卷四 《浪游记快》</li><li>卷五 《中山记历》(缺)</li><li>卷六 《养生记道》(缺)</li></ul><h3 id="三、-随笔"><a href="#三、-随笔" class="headerlink" title="三、 随笔"></a>三、 随笔</h3><p>&emsp;&emsp;纵览全书，作者沈三白（沈复）能娶妻芸娘乃是三生之幸。其中，闲情记趣与浪游记快两篇，体现出三白与一众朋友的不凡的“玩耍”的水平。然而他与芸娘之间的真实感情，却更是让人琢磨不透。为何这么说呢，看完书上四篇之后，回忆俩人感情，字里行间能体会到的，不过时三白娶了芸娘之后的沾沾自喜。基本上没有品出三白对芸娘有做过特别让芸娘过得好的事，反而为了自己的“乐趣”，无论家境如何，玩才是第一要任。为了玩，没钱可以穷游，借钱。基本上一辈子处于不思进取的状态，今朝有酒今朝醉，养家糊口是不存在的。因此也早就了他不凡的“玩乐”水平。文笔来讲……emm，文言文，读的不多，因此不瞎做点评。芸娘呢，作为“娇妻”，对夫君三白宠爱有加，不仅对他不知上进无所表示，甚至总是为相公着想，如何玩的好，如何更好的玩。当然，为夫君物色“小妾”也同样作为自己的一大要任。</p><p><img src="/images/posts/夫妻对饮.jpeg" alt="夫妻对饮" title="夫妻对饮"></p><p>&emsp;&emsp;芸娘在与憨圆的交涉中，由于自己付出的是无比的真心，而憨圆却态度一直在不断转变。与此同时，由于那个时代的限制，被公婆冤枉但还是得想办法讨好。自己明明如此努力，努力帮夫君找小妾，努力帮助夫君建设他的爱好，努力做一个公婆眼中的“好媳妇”，努力。。。然后换来的却仍然十分不理想。无限制的包容，改进自己，但是自己仍然气啊，又不能向夫君发脾气，即使他一无所有。处处不得好，又不得不继续前进，矛盾便产生了。有了矛盾，久而不治，必病。身心不够舒畅，因此病不可解。一辈子，基本上没什么享受，但是却付出了全部。反观三白，我穷归我穷，但我“穷且益坚，不坠玩乐之志”。为了生活的情趣，牺牲什么倒都无所谓。这种态度，不得不让人感慨。但人各有志，或许这条追求生活情绪便是三白的一生志向所在吧，旁人无可道也。</p>]]></content>
    
    <summary type="html">
    
      浮生若梦，为欢几何
    
    </summary>
    
      <category term="读书笔记" scheme="https://www.zhuxingmin.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://www.zhuxingmin.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>进入移动web世界</title>
    <link href="https://www.zhuxingmin.com/2019/09/16/%E8%BF%9B%E5%85%A5%E7%A7%BB%E5%8A%A8web%E4%B8%96%E7%95%8C/"/>
    <id>https://www.zhuxingmin.com/2019/09/16/进入移动web世界/</id>
    <published>2019-09-16T07:42:00.000Z</published>
    <updated>2019-09-17T09:04:48.805Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、-移动端web基础"><a href="#一、-移动端web基础" class="headerlink" title="一、 移动端web基础"></a>一、 移动端web基础</h2><h3 id="1-Pixel"><a href="#1-Pixel" class="headerlink" title="1. Pixel"></a>1. Pixel</h3><ul><li>px: CSS pixels 逻辑像素，浏览器使用的抽象单位；</li><li>dt,pt: 设备无关像素；</li><li>dpr: 设备像素缩放比；</li><li>公式： 1px = (dpr)<sup>2</sup> * dp</li></ul><a id="more"></a><p><strong>默认缩放比例：</strong></p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">ldpi</th><th style="text-align:center">mdpi</th><th style="text-align:center">hdpi</th><th style="text-align:center">xhdpi</th></tr></thead><tbody><tr><td style="text-align:center">ppi</td><td style="text-align:center">120</td><td style="text-align:center">160</td><td style="text-align:center">240</td><td style="text-align:center">320</td></tr><tr><td style="text-align:center">默认缩放比例</td><td style="text-align:center">0.75</td><td style="text-align:center">1.0</td><td style="text-align:center">1.5</td><td style="text-align:center">2.0</td></tr></tbody></table><h3 id="2-Viewport"><a href="#2-Viewport" class="headerlink" title="2. Viewport"></a>2. Viewport</h3><p>手机浏览器默认做了两件事</p><ol><li>页面渲染在了一个默认的viewport;</li><li>缩放;</li></ol><p>那么问题来了，为什么会有一个默认的viewport呢？<br>我们知道，pc端页面，在移动端查看的时候，由于像素不匹配，但是为了能够给用户展现一个比较完整的页面，因此会虚拟出一个viewport出来，在此viewprot上渲染页面。也就是说，最终目的，是<strong>为了排版正确</strong>。<br>但是由于一般默认情况下，给出的viewport像素宽对页面来说是不友好、不规范的，因此我们还需要解决一个规范问题。<br>解决方案：<strong>在head中加一个meta标签</strong><br>格式如下：<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;name=value, name=value&quot;&gt;</code></p><h3 id="3-meta标签"><a href="#3-meta标签" class="headerlink" title="3. meta标签"></a>3. meta标签</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"name=value, name=value"</span>&gt;</span><br><span class="line"><span class="comment">// name = value 对应关系</span></span><br><span class="line">width: device-width;</span><br><span class="line">initial: xx;   <span class="comment">// 设置初始缩放</span></span><br><span class="line">minimum-scale: xx;  <span class="comment">// 最小缩放</span></span><br><span class="line">maxim-scale: xx;    <span class="comment">// 最大缩放</span></span><br><span class="line">user-scalable: no;  <span class="comment">// 用户不可缩放</span></span><br></pre></td></tr></table></figure><hr><h2 id="二、-高效的移动web布局"><a href="#二、-高效的移动web布局" class="headerlink" title="二、 高效的移动web布局"></a>二、 高效的移动web布局</h2><h3 id="1-flexbox弹性布局"><a href="#1-flexbox弹性布局" class="headerlink" title="1. flexbox弹性布局"></a>1. flexbox弹性布局</h3><ul><li><p>flex布局混合排版</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 混合使用flex占比 */</span></span><br><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son1</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;        </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son2</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son3</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>flex水平垂直居中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-flex兼容性"><a href="#2-flex兼容性" class="headerlink" title="2. flex兼容性"></a>2. flex兼容性</h3><ul><li>iOS可以使用最新的flex布局；</li><li>Android4.4以下，只能兼容旧版flexbox布局；</li><li>Android4.4及以上，可以使用最新的flex布局；</li></ul><p>表现如下：</p><table><thead><tr><th style="text-align:center">新felx布局</th><th style="text-align:center">旧flexbox布局</th></tr></thead><tbody><tr><td style="text-align:center">display: -webkit-flex;</td><td style="text-align:center">display: -webkit-flex-box;</td></tr><tr><td style="text-align:center">-weblit-flex: 1;</td><td style="text-align:center">-weblit-flex-box: 1;</td></tr><tr><td style="text-align:center">justify-content: center;</td><td style="text-align:center">box-pack: center;</td></tr><tr><td style="text-align:center">align-items: center;</td><td style="text-align:center">box-align: cneter</td></tr></tbody></table><h3 id="3-响应式设计"><a href="#3-响应式设计" class="headerlink" title="3. 响应式设计"></a>3. 响应式设计</h3><p>顾名思义，一套页面，在所有端（pc、超大屏、ipad、手机等）完美运行。随页面宽高变化而改变页面样式，从而适配不同设备。</p><h4 id="媒体查询-media"><a href="#媒体查询-media" class="headerlink" title="媒体查询  @media"></a>媒体查询  @media</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">1024px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">980px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: green;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">720px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">640px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: skyblue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">320px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: pink;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width: <span class="number">1025px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>: darkseagreen;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="媒体类型"><a href="#媒体类型" class="headerlink" title="媒体类型"></a>媒体类型</h4><ul><li>screen： 屏幕</li><li>print： 打印机</li><li>handhead： 手持设备</li><li>all： 通用</li></ul><h4 id="常用参数说明"><a href="#常用参数说明" class="headerlink" title="常用参数说明"></a>常用参数说明</h4><ul><li>width: 视口宽</li><li>height: 视口高</li><li>device-width: 设备宽</li><li>device-height: 设备高</li><li>orientation: 检查设备横屏竖屏处向（landscape横，portrait竖）</li></ul><h4 id="设计点"><a href="#设计点" class="headerlink" title="设计点"></a>设计点</h4><ol><li>百分比布局：使切换css不同媒体样式时更加平滑</li><li>弹性图片：图片根据盒子百分比，改变盒子宽高即可</li><li>重新布局，显示和隐藏：<ul><li>同比例缩减元素尺寸</li><li>调整页面结构布局</li><li>隐藏冗余的元素</li></ul></li></ol><h4 id="优劣比较"><a href="#优劣比较" class="headerlink" title="优劣比较"></a>优劣比较</h4><ul><li>优点：减少重复开发，一套代码多端兼容</li><li>劣势：在极端情况下影响页面性能，含有较多的冗余代码</li></ul><h3 id="4-移动web特别样式处理"><a href="#4-移动web特别样式处理" class="headerlink" title="4. 移动web特别样式处理"></a>4. 移动web特别样式处理</h3><h4 id="a-高清图片处理"><a href="#a-高清图片处理" class="headerlink" title="a. 高清图片处理"></a>a. 高清图片处理</h4><blockquote><p>width: (w_value / dpr)px<br>height: (h_value / dpr)px</p></blockquote><h4 id="b-1像素边框问题"><a href="#b-1像素边框问题" class="headerlink" title="b. 1像素边框问题"></a>b. 1像素边框问题</h4><p><strong>问题：</strong> Retina屏幕下，1像素问题<br><strong>原因：</strong> 1px使用2dp渲染<br><strong>解决：</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 错误案例 */</span></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">0.5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 正确案例 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scaleY</span>(0.5);</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="c-相对单位"><a href="#c-相对单位" class="headerlink" title="c. 相对单位"></a>c. 相对单位</h4><ul><li>em: 根据父节点的font-size为相对单位</li><li>rem: 根据html的font-size为相对单位 <strong><em>（建议使用）</em></strong></li></ul><p>那么，rem的基值设置为多少比较合适呢？<br>回归到开发中来，我们有一个公式：<br><code>rem = screen.width / x</code><br>例： 320的屏幕，可以设置为font-size=32px，而375的屏幕，设置为37.5px。我们的目的是为了方便计算。</p><h4 id="d-文本溢出"><a href="#d-文本溢出" class="headerlink" title="d. 文本溢出"></a>d. 文本溢出</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 单行文本溢出*/</span></span><br><span class="line"><span class="selector-class">.line</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 多行文本溢出 */</span></span><br><span class="line"><span class="selector-class">.lines</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-box <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">word-break</span>: break-all;</span><br><span class="line">    <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">    -webkit-line-clamp: 2;  // 行数</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、-终端交互优化"><a href="#三、-终端交互优化" class="headerlink" title="三、 终端交互优化"></a>三、 终端交互优化</h2><h3 id="1-300ms延迟问题"><a href="#1-300ms延迟问题" class="headerlink" title="1. 300ms延迟问题"></a>1. 300ms延迟问题</h3><p>在移动端，由于有多重手势操作替代了鼠标操作，因此，为了判断出是点击、双击、触摸移动或者别的手势，iOS系统判断中加了一个300毫秒的延迟：在第一次出发事件300毫秒内再次出发，例如点击，就会被判断为双击。那么为了统一规范，后来在Android系统中也加入了此判定。这就是著名的移动端300ms延迟问题。<br>那么如何解决这个问题呢？<strong>tap</strong>事件处理。<br>什么是tap事件？简而言之，就是通过touch，监听touchstart和tarchend，如果两者间隔较短，例如100ms甚至更短，且起始位置的偏移量极小，控制在几个像素之内，那么就判定为点击事件。如此操作，可以绕过系统300ms的规范，从而在用户体验上做的更优。<br>但我们只有，一般有利就有弊。我们解决掉300ms延迟问题，从而又产生了一个新的问题，就是穿透问题。例如在按钮上有一个蒙层，我们点击蒙层，关闭其蒙层。但是如果在蒙层下面同样有点击事件，那么我们在点击蒙层关闭后，也会触发到下面的事件。那么这种问题的一般解决方案便是关闭蒙层的时候，添加一个300ms的延时，经过300ms延时关闭后，点击不再具有穿透性，巧妙的解决的该穿透问题。但是问题又来了，300ms延时其实对用户体验来讲并不那么友好。因此还是推荐第一种解决方案，不会出现拆东墙补西墙或者说捉襟见肘的问题。当然，如果使用框架库的话，大部分强大的库默认都解决了这个问题，不用开发者再为此操心。</p><h3 id="2-touch相关"><a href="#2-touch相关" class="headerlink" title="2. touch相关"></a>2. touch相关</h3><p><strong><em>触摸是移动设备交互的核心事件</em></strong></p><h4 id="a-触摸事件"><a href="#a-触摸事件" class="headerlink" title="a. 触摸事件"></a>a. 触摸事件</h4><table><thead><tr><th style="text-align:center">事件</th><th style="text-align:center">触发情况</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">touchstart</td><td style="text-align:center">手指触摸屏幕触发</td><td style="text-align:center">已有手指放在屏幕上则不触发</td></tr><tr><td style="text-align:center">touchmove</td><td style="text-align:center">手指在屏幕上滑动</td><td style="text-align:center">连续触发</td></tr><tr><td style="text-align:center">touchend</td><td style="text-align:center">手指离开屏幕时触发</td><td style="text-align:center">/</td></tr><tr><td style="text-align:center">touchcancel</td><td style="text-align:center">系统取消touch时触发</td><td style="text-align:center">不常用</td></tr></tbody></table><h4 id="b-事件属性"><a href="#b-事件属性" class="headerlink" title="b. 事件属性"></a>b. 事件属性</h4><ul><li>touches： 跟踪触摸操作的touch对象数组</li><li>targetTouches： 特定事件目标的touch对象数组</li><li>changeTouches： 上次触摸改变的touch对象数组</li></ul><h4 id="c-每个touch对象包含属性"><a href="#c-每个touch对象包含属性" class="headerlink" title="c. 每个touch对象包含属性"></a>c. 每个touch对象包含属性</h4><ol><li>clientX： 触摸目标在视口中的横坐标</li><li>clientY： 触摸目标在视口中的纵坐标</li><li>identifier： 标识触摸的唯一id</li><li>pageX： 触摸目标在页面中的横坐标（含滚动）</li><li>pageY： 触摸目标在页面中的纵坐标（含滚动）</li><li>screenX： 触摸目标在屏幕中的横坐标</li><li>screenY： 触摸目标在屏幕中的纵坐标</li><li>target： 触摸的DOM节点的目标</li></ol><h4 id="d-相关bug"><a href="#d-相关bug" class="headerlink" title="d. 相关bug"></a>d. 相关bug</h4><p>在Android中，某些版本只会触发一次touchstart和一次touchmove，不会触发touchend。解决方案则是在事件中（touchmove）添加阻止默认事件：<code>event.preventDefault()</code>。但与此同时，要注意随之产生的一个问题，就是组织默认事件后，页面也会随之禁止滚动，因此看情况使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、-移动端web基础&quot;&gt;&lt;a href=&quot;#一、-移动端web基础&quot; class=&quot;headerlink&quot; title=&quot;一、 移动端web基础&quot;&gt;&lt;/a&gt;一、 移动端web基础&lt;/h2&gt;&lt;h3 id=&quot;1-Pixel&quot;&gt;&lt;a href=&quot;#1-Pixel&quot; class=&quot;headerlink&quot; title=&quot;1. Pixel&quot;&gt;&lt;/a&gt;1. Pixel&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;px: CSS pixels 逻辑像素，浏览器使用的抽象单位；&lt;/li&gt;
&lt;li&gt;dt,pt: 设备无关像素；&lt;/li&gt;
&lt;li&gt;dpr: 设备像素缩放比；&lt;/li&gt;
&lt;li&gt;公式： 1px = (dpr)&lt;sup&gt;2&lt;/sup&gt; * dp&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="移动web" scheme="https://www.zhuxingmin.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
      <category term="解决方案" scheme="https://www.zhuxingmin.com/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>vue构建项目入口文件index.html缓存引发的白屏问题</title>
    <link href="https://www.zhuxingmin.com/2019/09/03/vue%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%85%A5%E5%8F%A3%E6%96%87%E4%BB%B6index-html%E7%BC%93%E5%AD%98%E5%BC%95%E5%8F%91%E7%9A%84%E7%99%BD%E5%B1%8F%E9%97%AE%E9%A2%98/"/>
    <id>https://www.zhuxingmin.com/2019/09/03/vue构建项目入口文件index-html缓存引发的白屏问题/</id>
    <published>2019-09-03T07:14:27.000Z</published>
    <updated>2019-09-16T07:47:28.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>&emsp;&emsp;vue项目打包后，在非首次线上替换dist文件时，某些手机/浏览器在之后首次打开页面，可能出现白屏情况。那么该问题产生原因是什么呢？我们又该如何应对呢？</p><h3 id="背景及原因分析"><a href="#背景及原因分析" class="headerlink" title="背景及原因分析"></a>背景及原因分析</h3><p>&emsp;&emsp;在使用vue-cli脚手架构建完项目，项目完成后，需打包上线。默认打包方式则是<code>npm build</code>，然后项目根目录会生成 <strong><em>dist</em></strong> 文件夹。服务端将该文件夹替换线上即可。但是当第n（n&gt;1）次上线后，由于在用户端会默认缓存index.html入口文件，而由于vue打包生成的css/js都是哈希值，跟上次的文件名都不同，因此会出现找不到css/js的情况，导致白屏的产生。<br><a id="more"></a><br>&emsp;&emsp;经常使用vue作为开发框架的开发者都知道，build打包后，所生成的css/js的文件名中间会夹杂哈希值，以此来避免缓存问题。但是由于入口文件index.html的名字每次打包后不改变，并且也不能乱变，就导致了index.html在用户端仍然会被缓存下来。那么在服务端更新包之后，由于旧的文件被删除，而index.html所链接的路径依然是旧文件路径，因此会找不到文件，从而白屏。解决方案一般是强制刷新页面或者清除缓存重新加载。当然，网上也给出不少的“缓解方案”。为什么称之为缓解方案而不是解决方案呢？因为前端缓存问题是一个具有行业性的难题，在没有根治之前，一般是优化为主。当然，引领前端行业的大佬们自然是要挑战极限的，不在该问题之内讨论。<br>&emsp;&emsp;下面给出部分优化方案。</p><h3 id="优化方案"><a href="#优化方案" class="headerlink" title="优化方案"></a>优化方案</h3><h4 id="方案1-meta标签"><a href="#方案1-meta标签" class="headerlink" title="方案1. meta标签"></a>方案1. meta标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在入口文件index.html中，头部添加meta标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Cache"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方案2-时间戳区分"><a href="#方案2-时间戳区分" class="headerlink" title="方案2. 时间戳区分"></a>方案2. 时间戳区分</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.prod.conf.js</span></span><br><span class="line"><span class="keyword">const</span> Version = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line"></span><br><span class="line">output: &#123;</span><br><span class="line">    path: config.build.assetsRoot,</span><br><span class="line">    filename: utils.assetsPath(<span class="string">'js/[name].[chunkhash].'</span>+_Version+<span class="string">'js'</span>),</span><br><span class="line">    chunkFilename: utils.assetsPath(<span class="string">'js/[id].[chunkhash].'</span>+_Version+<span class="string">'js'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="方案3-服务端配置"><a href="#方案3-服务端配置" class="headerlink" title="方案3. 服务端配置"></a>方案3. 服务端配置</h5><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// nginx端配置</span><br><span class="line"><span class="attribute">location</span> = /index.html &#123;</span><br><span class="line">    <span class="attribute">add_header</span> Cache-Control <span class="string">"no-cache, no-store"</span>;</span><br><span class="line">    <span class="comment"># add_header Cache-Control no-store;</span></span><br><span class="line">    <span class="comment"># add_header Pragma no-cache;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方案对比"><a href="#方案对比" class="headerlink" title="方案对比"></a>方案对比</h4><table><thead><tr><th style="text-align:center">方案</th><th style="text-align:center">操作难度</th><th style="text-align:center">优缺点</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">html文件简单修改</td><td style="text-align:center">基本上没用</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">webpack配置简单修改</td><td style="text-align:center">跟hash值文件名一个性质，不解决痛点</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">服务端加配置，简单</td><td style="text-align:center">解决部分缓存问题，不解决全部；白屏问题依旧存在</td></tr></tbody></table><h4 id="新思路"><a href="#新思路" class="headerlink" title="新思路"></a>新思路</h4><p>&emsp;&emsp;在一些论坛中，在某些特定情况下（如混合开发App，原生嵌入webview还在h5)，可在原生端尝试解决：</p><ul><li>加载webview前清除缓存再加载；</li><li>销毁webview前清除缓存；</li></ul><p>&emsp;&emsp;效果如何，有待验证。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;vue项目打包后，在非首次线上替换dist文件时，某些手机/浏览器在之后首次打开页面，可能出现白屏情况。那么该问题产生原因是什么呢？我们又该如何应对呢？&lt;/p&gt;
&lt;h3 id=&quot;背景及原因分析&quot;&gt;&lt;a href=&quot;#背景及原因分析&quot; class=&quot;headerlink&quot; title=&quot;背景及原因分析&quot;&gt;&lt;/a&gt;背景及原因分析&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在使用vue-cli脚手架构建完项目，项目完成后，需打包上线。默认打包方式则是&lt;code&gt;npm build&lt;/code&gt;，然后项目根目录会生成 &lt;strong&gt;&lt;em&gt;dist&lt;/em&gt;&lt;/strong&gt; 文件夹。服务端将该文件夹替换线上即可。但是当第n（n&amp;gt;1）次上线后，由于在用户端会默认缓存index.html入口文件，而由于vue打包生成的css/js都是哈希值，跟上次的文件名都不同，因此会出现找不到css/js的情况，导致白屏的产生。&lt;br&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="白屏" scheme="https://www.zhuxingmin.com/tags/%E7%99%BD%E5%B1%8F/"/>
    
      <category term="缓存" scheme="https://www.zhuxingmin.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>css篇:loading动画</title>
    <link href="https://www.zhuxingmin.com/2019/08/26/css%E7%AF%87-loading%E5%8A%A8%E7%94%BB/"/>
    <id>https://www.zhuxingmin.com/2019/08/26/css篇-loading动画/</id>
    <published>2019-08-26T09:00:38.000Z</published>
    <updated>2019-09-16T07:47:28.579Z</updated>
    
    <content type="html"><![CDATA[<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><img src="/images/posts/loading.gif" alt="loading示例" title="loading示例"></p><a id="more"></a><h3 id="一、解析"><a href="#一、解析" class="headerlink" title="一、解析"></a>一、解析</h3><h4 id="loading动画1"><a href="#loading动画1" class="headerlink" title="loading动画1"></a>loading动画1</h4><p>&emsp;&emsp;由图可见，动画1中有三根竖线，在进行变长变短的高度变化以及线条的颜色变化，因此分为以下几个步骤：</p><ul><li>建立块级区域；</li><li>三根线条排版；</li><li>动画——颜色、线条长度渐变；</li><li>动画引入及执行方法；</li></ul><h4 id="loading动画2"><a href="#loading动画2" class="headerlink" title="loading动画2"></a>loading动画2</h4><p>&emsp;&emsp;动画2中则与动画1排版略有不同：在动画区域内，有四个圆点，然后重复的放大缩小以及匀速旋转。因此步骤如下：</p><ul><li>建立块级区域；</li><li>四个原点排版（定位/flex等方法）</li><li>动画——缩放、旋转；</li><li>动画引入及执行方法；</li></ul><h3 id="二、-代码"><a href="#二、-代码" class="headerlink" title="二、 代码"></a>二、 代码</h3><h4 id="1-loading1"><a href="#1-loading1" class="headerlink" title="1. loading1"></a>1. loading1</h4><h5 id="html"><a href="#html" class="headerlink" title="html"></a>html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line line1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line line2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line line3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="css"><a href="#css" class="headerlink" title="css"></a>css</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loading</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(0,0,0,0.2);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* loading1 */</span></span><br><span class="line"><span class="selector-class">.loading1</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">34px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">33px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#8e6ddb</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line1</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: loading1 .<span class="number">6s</span> ease <span class="number">0s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line2</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: loading1 .<span class="number">6s</span> ease .<span class="number">2s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line3</span>&#123;</span><br><span class="line">    <span class="attribute">animation</span>: loading1 .<span class="number">6s</span> ease .<span class="number">4s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> loading1 &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#608cff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">34px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#8e6ddb</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#608cff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-loading2"><a href="#2-loading2" class="headerlink" title="2. loading2"></a>2. loading2</h4><h5 id="html-1"><a href="#html-1" class="headerlink" title="html"></a>html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"point point1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"point point2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"point point3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"point point4"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="css-1"><a href="#css-1" class="headerlink" title="css"></a>css</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loading</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(0,0,0,0.2);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* loading2 */</span></span><br><span class="line"><span class="selector-class">.loading2</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">46px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">46px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">27px</span> auto <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">animation</span>: loading2 <span class="number">2s</span> linear <span class="number">0s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.point</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.point1</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#dbdcbf</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.point2</span>&#123;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#32b53f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.point3</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#a77ef4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.point4</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#c4356d</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">keyframes</span> loading2 &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(0deg) <span class="built_in">scale</span>(1);</span><br><span class="line">    &#125;</span><br><span class="line">    10% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(36deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">    &#125;</span><br><span class="line">    20% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(72deg) <span class="built_in">scale</span>(1.2);</span><br><span class="line">    &#125;</span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(108deg) <span class="built_in">scale</span>(1.3);</span><br><span class="line">    &#125;</span><br><span class="line">    40% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(144deg) <span class="built_in">scale</span>(1.4);</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(180deg) <span class="built_in">scale</span>(1.5);</span><br><span class="line">    &#125;</span><br><span class="line">    60% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(216deg) <span class="built_in">scale</span>(1.4);</span><br><span class="line">    &#125;</span><br><span class="line">    70% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(252deg) <span class="built_in">scale</span>(1.3);</span><br><span class="line">    &#125;</span><br><span class="line">    80% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(288deg) <span class="built_in">scale</span>(1.2);</span><br><span class="line">    &#125;</span><br><span class="line">    90% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(324deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###<br>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/posts/loading.gif&quot; alt=&quot;loading示例&quot; title=&quot;loading示例&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="css" scheme="https://www.zhuxingmin.com/tags/css/"/>
    
      <category term="动画" scheme="https://www.zhuxingmin.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="loading" scheme="https://www.zhuxingmin.com/tags/loading/"/>
    
  </entry>
  
  <entry>
    <title>vue/cli3项目运行报错sockjs-node/info解决方案</title>
    <link href="https://www.zhuxingmin.com/2019/08/13/vue-cli3%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99sockjs-node-info%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://www.zhuxingmin.com/2019/08/13/vue-cli3项目运行报错sockjs-node-info解决方案/</id>
    <published>2019-08-13T09:07:31.000Z</published>
    <updated>2019-09-16T07:47:28.579Z</updated>
    
    <content type="html"><![CDATA[<h3 id="bug复现"><a href="#bug复现" class="headerlink" title="bug复现"></a>bug复现</h3><p>&emsp;&emsp;继上次将vue项目脚手架工具从vue-cli2.x升级到vue-cli3.x后，除了环境、配置问题外，在运行时出现了一些个新的问题。<br>&emsp;&emsp;启动项目后，在内网非本机运行项目时，控制台报错如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">get http://localhost:8080/sockjs-node/info?t=1462183700002 net::ERR_CONNECTION_REFUSED</span><br><span class="line">[WDS] Disconnected!</span><br><span class="line">get http://localhost:8080/sockjs-node/info?t=1462183700002 net::ERR_CONNECTION_REFUSED</span><br><span class="line">[WDS] Disconnected!</span><br><span class="line">get http://localhost:8080/sockjs-node/info?t=1462183700002 net::ERR_CONNECTION_REFUSED</span><br><span class="line">[WDS] Disconnected!</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="webpack-config-js的目前配置如下："><a href="#webpack-config-js的目前配置如下：" class="headerlink" title="webpack.config.js的目前配置如下："></a>webpack.config.js的目前配置如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line"></span><br><span class="line">const resolve = dir =&gt; path.resolve(__dirname, dir);</span><br><span class="line"></span><br><span class="line">const env = process.env.NODE_ENV;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    // 基本路径配置，解决打包路径问题</span><br><span class="line">    publicPath: &apos;./&apos;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 配置less</span><br><span class="line">    css: &#123;</span><br><span class="line">        loaderOptions: &#123;</span><br><span class="line">            css: &#123;&#125;,</span><br><span class="line">            postcss: &#123;</span><br><span class="line">                plugins: [</span><br><span class="line">                    require(&apos;postcss-px2rem&apos;)(&#123;</span><br><span class="line">                        remUnit: 37.5</span><br><span class="line">                    &#125;)</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    configureWebpack: (config) =&gt; &#123;</span><br><span class="line">        // 如果不是开发环境</span><br><span class="line">        if (env !== &apos;development&apos;) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 路径</span><br><span class="line">        config.resolve = &#123;</span><br><span class="line">            extensions: [&apos;.js&apos;, &apos;.vue&apos;, &apos;.json&apos;],</span><br><span class="line">            alias: &#123;</span><br><span class="line">                &apos;vue$&apos;: &apos;vue/dist/vue.esm.js&apos;,</span><br><span class="line">                &apos;@&apos;: resolve(&apos;src&apos;),</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    chainWebpack: config =&gt; &#123;</span><br><span class="line">        // 添加别名</span><br><span class="line">        config.resolve.alias</span><br><span class="line">            .set(&apos;@&apos;, resolve(&apos;src&apos;))</span><br><span class="line">            .set(&apos;assets&apos;, resolve(&apos;src/assets&apos;))</span><br><span class="line">            .set(&apos;static&apos;, resolve(&apos;src/static&apos;));</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="报错分析"><a href="#报错分析" class="headerlink" title="报错分析"></a>报错分析</h3><p>&emsp;&emsp;首先，sockjs-node是何方神圣？不难查出，sockjs-node是一个JavaScript库，提供跨浏览器JavaScript的API，创建了一个低延迟、全双工的浏览器和web服务器之间通信通道。那么在各端表现为：</p><ul><li>服务端：sockjs-node（<a href="https://github.com/sockjs/sockjs-node）" target="_blank" rel="noopener">https://github.com/sockjs/sockjs-node）</a></li><li>客户端：sockjs-clien（<a href="https://github.com/sockjs/sockjs-client）" target="_blank" rel="noopener">https://github.com/sockjs/sockjs-client）</a></li></ul><p>&emsp;&emsp;vue-cli3.x的启动方式是<code>npm run serve</code>，我们没有用到该sockjs-node功能，但启动时会默认连续发请求调用本地接口。因此我们要做的就是移除掉它。那么如何移除？</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>&emsp;&emsp;分享两种方案</p><h4 id="1-注释法"><a href="#1-注释法" class="headerlink" title="1. 注释法"></a>1. 注释法</h4><p>&emsp;&emsp;顾名思义，找到依赖包中的源码，将其注释：</p><ol><li>进入路径<code>/node_modules/sockjs-client/dist/sockjs.js</code></li><li><p>代码1605行注释掉：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// self.xhr.send(payload);  //本行注释</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    self.emit(<span class="string">'finish'</span>, <span class="number">0</span>, <span class="string">''</span>);</span><br><span class="line">    self._cleanup(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重启项目</p></li></ol><h4 id="2-配置vue-config"><a href="#2-配置vue-config" class="headerlink" title="2. 配置vue.config"></a>2. 配置vue.config</h4><p>&emsp;&emsp;vue.config.js中的module.xports中添加如下，然后重启：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">    proxy: <span class="string">'http://localhost:8080'</span>,</span><br><span class="line">    public: <span class="string">'192.168.xxx.xxx:8080'</span>  <span class="comment">// 本地ip</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;bug复现&quot;&gt;&lt;a href=&quot;#bug复现&quot; class=&quot;headerlink&quot; title=&quot;bug复现&quot;&gt;&lt;/a&gt;bug复现&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;继上次将vue项目脚手架工具从vue-cli2.x升级到vue-cli3.x后，除了环境、配置问题外，在运行时出现了一些个新的问题。&lt;br&gt;&amp;emsp;&amp;emsp;启动项目后，在内网非本机运行项目时，控制台报错如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;get http://localhost:8080/sockjs-node/info?t=1462183700002 net::ERR_CONNECTION_REFUSED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[WDS] Disconnected!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get http://localhost:8080/sockjs-node/info?t=1462183700002 net::ERR_CONNECTION_REFUSED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[WDS] Disconnected!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get http://localhost:8080/sockjs-node/info?t=1462183700002 net::ERR_CONNECTION_REFUSED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[WDS] Disconnected!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.zhuxingmin.com/tags/vue/"/>
    
      <category term="vue-cli3" scheme="https://www.zhuxingmin.com/tags/vue-cli3/"/>
    
      <category term="webpack" scheme="https://www.zhuxingmin.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>Hello React</title>
    <link href="https://www.zhuxingmin.com/2019/08/06/Hello-React/"/>
    <id>https://www.zhuxingmin.com/2019/08/06/Hello-React/</id>
    <published>2019-08-06T07:38:41.000Z</published>
    <updated>2019-09-16T07:47:28.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、-开发环境配置-Mac"><a href="#一、-开发环境配置-Mac" class="headerlink" title="一、 开发环境配置(Mac)"></a>一、 开发环境配置(Mac)</h2><h3 id="1-node-js-安装-（node-npm"><a href="#1-node-js-安装-（node-npm" class="headerlink" title="1. node.js 安装 （node + npm)"></a>1. node.js 安装 （node + npm)</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//官网安装包下载即可</span></span><br></pre></td></tr></table></figure><h3 id="2-官方脚手架工具-create-react-app"><a href="#2-官方脚手架工具-create-react-app" class="headerlink" title="2. 官方脚手架工具 create-react-app"></a>2. 官方脚手架工具 create-react-app</h3>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install create-react-app -g</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="3-创建项目"><a href="#3-创建项目" class="headerlink" title="3. 创建项目"></a>3. 创建项目</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create-react-app hello  <span class="comment">//创建一个叫hello的项目</span></span><br></pre></td></tr></table></figure><h3 id="4-运行项目"><a href="#4-运行项目" class="headerlink" title="4. 运行项目"></a>4. 运行项目</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建完后，cd到该项目</span></span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="#小结"></a>#小结</h3><p>&emsp;&emsp;至此，Mac环境下react基于脚手架的开发环境已搭建完成。运行项目（<code>npm start</code>)后，浏览器会自动打开本地页面<strong><a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a></strong>。如果到此步弹出带有react的Logo的欢迎页面，则表示环境已经成功配置。</p><hr><h2 id="二、-Hello-World"><a href="#二、-Hello-World" class="headerlink" title="二、 Hello World"></a>二、 Hello World</h2><p>&emsp;&emsp;作为程序员最喜闻乐见的入门代码，还属 <strong><em>hello world</em></strong> 。那么第一个组件则输出一段 hello world。</p><h3 id="1-项目目录结构"><a href="#1-项目目录结构" class="headerlink" title="1. 项目目录结构"></a>1. 项目目录结构</h3><p>基础目录结构及注释如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">|——hello</span><br><span class="line">   |—— node_modules              # 项目依赖</span><br><span class="line">   |—— public                    # 公共文件</span><br><span class="line">       |—— favicon.ico              // 网站图标</span><br><span class="line">       |—— mainfest.json            // 应用基本配置信息</span><br><span class="line">       └── index.html               // 主入口文件</span><br><span class="line">   |—— src                       # 主程序模块</span><br><span class="line">       |—— App.css                  // App css样式</span><br><span class="line">       |—— App.js                   // 主组件</span><br><span class="line">       |—— App.test.js              // 测试组件</span><br><span class="line">       |—— index.css                // 主文件样式</span><br><span class="line">       |—— index.js                 // 主文件脚本</span><br><span class="line">       |—— logo.svg                 // svg logo</span><br><span class="line">       └── serviceWorker.js         // 缓存配置文件</span><br><span class="line">   |—— package.json              # 包配置文件</span><br><span class="line">   └── README.md                 # React说明文档</span><br></pre></td></tr></table></figure></p><h3 id="2-第一个组件"><a href="#2-第一个组件" class="headerlink" title="2. 第一个组件"></a>2. 第一个组件</h3><p>&emsp;&emsp;了解了项目结构，接下来开始写hello world组件。 <strong>首先</strong>，在src文件夹下新建一个文件，如HelloWorld.js。<strong>然后</strong>，在该文件下，三步走：</p><ol><li>引入react</li><li>新建类继承react</li><li>导出</li></ol><p>示例一下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 引入</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;h1&gt;Hello World&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> HelloWorld</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;我们第一个组件就写完了，但是缺少一步：将组件挂载到根节点上：打开<code>src/index.js</code>：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入组件</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'./HelloWorld'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 挂载</span></span><br><span class="line">ReactDOM.render(<span class="xml"><span class="tag">&lt;<span class="name">HelloWorld</span> /&gt;</span>, document.getElementById('root'));</span></span><br></pre></td></tr></table></figure></p><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="# 小结"></a># 小结</h3><p>&emsp;&emsp;写完第一个组件运行起来，仿佛打开了新世界的大门……诶，等等，刚才我写了什么？为什么在js中render函数中返回的是一段奇怪的html代码？这是什么格式？这样的代码是什么鬼？听我道来。</p><h2 id="三、-JSX"><a href="#三、-JSX" class="headerlink" title="三、 JSX"></a>三、 JSX</h2><h3 id="1-关于JSX"><a href="#1-关于JSX" class="headerlink" title="1. 关于JSX"></a>1. 关于JSX</h3><p>&emsp;&emsp;上章说到，render函数中返回的是一段奇怪的html代码，那这段代码是什么吗？在此引入<strong>JSX</strong>概念及语法。Facebook称其为jsx，属于JavaScript的语法扩展。虽然看似html的模板语言，实则是在JavaScript内部实现。</p><h3 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h3><p>&emsp;&emsp;引入JSX概念，是为了编程更加简答。当然，JSX的语法也不会复杂，甚至可以说是非常简单：主要语法是一个花括号，然后在花括号内写expressions表达式即可。对expression有疑惑的可以先挪步到官方查阅文档，传送门：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Expressions_and_Operators" target="_blank" rel="noopener">expression</a></p><h4 id="a-基本语法"><a href="#a-基本语法" class="headerlink" title="a. 基本语法"></a>a. 基本语法</h4><p>&emsp;&emsp;那么，使用expressions表达式我们可以做什么呢？大家可以简单敲几行运行一下。简单示例下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;h1&gt;Hello React&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">                &lt;div&gt;字符串： &#123;'string'&#125;&lt;/</span>div&gt;</span><br><span class="line">                &lt;div&gt;数字运算： &#123;<span class="number">12</span>+<span class="number">4</span>&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                &lt;div&gt;数组： &#123;[1,2,3,4]&#125;&lt;/</span>div&gt;</span><br><span class="line">                &lt;div&gt;JSX：&#123;&lt;mark&gt;标识&lt;<span class="regexp">/mark&gt;&#125;&lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default Test</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;如果我们需要进行一些数据操作，例如判断，遍历等等之类的，又要怎么做呢？</p><h4 id="b-map"><a href="#b-map" class="headerlink" title="b. map"></a>b. map</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> learnList = [<span class="string">'React'</span>, <span class="string">'Vue'</span>, <span class="string">'Angular'</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        learnList.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span></span><br><span class="line">                             &lt;li&gt;&#123;index + <span class="number">1</span>&#125;: &#123;item&#125;&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">                        )</span></span><br><span class="line"><span class="regexp">                    &#125;</span></span><br><span class="line"><span class="regexp">                &lt;/u</span>l&gt;</span><br><span class="line"></span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default Welcome</span></span><br></pre></td></tr></table></figure><h4 id="c-if三元表达式"><a href="#c-if三元表达式" class="headerlink" title="c. if三元表达式"></a>c. if三元表达式</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> showMe = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">               &#123;</span><br><span class="line">                  showMe ? <span class="xml"><span class="tag">&lt;<span class="name">mark</span>&gt;</span>这是true显式的文字<span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span> : <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>这是false显式的文字<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">               &#125;   </span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default Welcome</span></span><br></pre></td></tr></table></figure><h4 id="d-属性"><a href="#d-属性" class="headerlink" title="d. 属性"></a>d. 属性</h4><p>&emsp;&emsp;大部分情况，html语法在JSX中正常使用，但是也有个别例外：</p><ol><li>class =&gt; className</li><li>for =&gt; htmlFor</li></ol><p>例:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (</span><br><span class="line">   &lt;div className=<span class="string">"..."</span> htmlFor=<span class="string">"..."</span>&gt;</span><br><span class="line">      一段文字……  </span><br><span class="line">   &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">)</span></span><br></pre></td></tr></table></figure></p><h3 id="小结-2"><a href="#小结-2" class="headerlink" title="# 小结"></a># 小结</h3><p>&emsp;&emsp;本章了解了上章提到的，写在js中的html是JSX语法，并且介绍了JSX语法及基本功能使用，已经可以开始上手解决一部分的业务了。那么除此之外，关于组件之间如何交流，有何属性和状态？且看下回。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、-开发环境配置-Mac&quot;&gt;&lt;a href=&quot;#一、-开发环境配置-Mac&quot; class=&quot;headerlink&quot; title=&quot;一、 开发环境配置(Mac)&quot;&gt;&lt;/a&gt;一、 开发环境配置(Mac)&lt;/h2&gt;&lt;h3 id=&quot;1-node-js-安装-（node-npm&quot;&gt;&lt;a href=&quot;#1-node-js-安装-（node-npm&quot; class=&quot;headerlink&quot; title=&quot;1. node.js 安装 （node + npm)&quot;&gt;&lt;/a&gt;1. node.js 安装 （node + npm)&lt;/h3&gt;   &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//官网安装包下载即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-官方脚手架工具-create-react-app&quot;&gt;&lt;a href=&quot;#2-官方脚手架工具-create-react-app&quot; class=&quot;headerlink&quot; title=&quot;2. 官方脚手架工具 create-react-app&quot;&gt;&lt;/a&gt;2. 官方脚手架工具 create-react-app&lt;/h3&gt;   &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install create-react-app -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端笔记" scheme="https://www.zhuxingmin.com/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JSX" scheme="https://www.zhuxingmin.com/tags/JSX/"/>
    
      <category term="React" scheme="https://www.zhuxingmin.com/tags/React/"/>
    
  </entry>
  
</feed>
